{"version":3,"sources":["assets/spinner.gif","api/spotify.js","components/AllTracks.jsx","components/Header.jsx","pages/Home/Home.jsx","utilities/constants.js","pages/Landing/Landing.jsx","api/auth.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","GET_ALL_USER_PLAYLISTS_URL","concat","GET_PLAYLIST_TRACKS_URL","playlistId","spotifyGetRequest","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","spotifyURL","accessToken","response","wrap","_context","prev","next","fetch","method","headers","Accept","Content-Type","Authorization","sent","status","abrupt","json","Error","stop","_x","_x2","apply","this","arguments","getUserProfile","_ref2","_callee2","user","_context2","t0","console","error","_x3","getAllUserPlaylists","_ref3","_callee3","playlists","more","pageUrl","_context3","push","toConsumableArray","items","_x4","getAllTracksForManyPlaylists","_ref4","_callee4","promises","playlistNames","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","playlist","promiseResults","noNulls","playlistNameToTracksMap","i","_context4","undefined","Symbol","iterator","done","value","getAllTracksForSinglePlaylist","id","name","return","finish","Promise","all","every","item","length","_x5","_x6","_ref5","_callee5","tracks","_context5","_x7","_x8","AllTracks","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","filteredTracks","searchText","loading","setState","access_token","values","_this2","applyFilter","callback","_this$state","_i","_Object$entries","entries","slicedToArray","playlistName","track","artists","album","trackNameMatch","toLowerCase","includes","joinedArtists","map","el","join","artistMatch","albumMatch","key","trackName","artist","err","slice","react_default","createElement","className","reduce","acc","curr","prevState","sort","b","localeCompare","_this3","src","spinner","alt","numTracks","onSubmit","e","preventDefault","placeholder","type","onChange","target","onClick","filterByKey","renderFilteredTracks","Component","Header","images","url","display_name","logout","Home","cookies","get","history","remove","components_Header","bind","src_components_AllTracks","withCookies","scopes","Landing","location","queryString","parse","hash","set","window","encodeURIComponent","App","es6","BrowserRouter","basename","process","Route","path","exact","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.de3d750f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.8b9a5cd1.gif\";","const MAX_PLAYLISTS_PER_REQUEST = 50;\n\nconst GET_USER_PROFILE_URL = 'https://api.spotify.com/v1/me';\nconst GET_ALL_USER_PLAYLISTS_URL = `https://api.spotify.com/v1/me/playlists?&limit=${MAX_PLAYLISTS_PER_REQUEST}`;\nconst GET_PLAYLIST_TRACKS_URL = playlistId => `https://api.spotify.com/v1/playlists/${playlistId}/tracks`;\n\n/**\n * A generic request to the Spotify API; all fetches should use this\n * @param {string} spotifyURL \n * @param {string} accessToken \n */\nconst spotifyGetRequest = async (spotifyURL, accessToken) => {\n    const response = await fetch(spotifyURL, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${accessToken}`,\n        },\n    })\n    if (response.status === 200) {\n        return response.json()\n    } else {\n        throw new Error(`Recieved ${response.status} when fetching`)\n    }\n};\n\n/**\n * Gets the current user profile, or null if it fails\n * @param {string} accessToken \n */\nexport const getUserProfile = async (accessToken) => {\n    try {\n        const user = await spotifyGetRequest(GET_USER_PROFILE_URL, accessToken)\n        return user\n    } catch (err) {\n        console.error('Error getting the current user profile', err)\n        return null\n    }\n}\n\n/**\n * Get all playlists for the current user, or null if it fails\n * @param {string} accessToken \n */\nexport const getAllUserPlaylists = async (accessToken) => {\n    try {\n        const playlists = []\n        let more = true\n        let pageUrl = GET_ALL_USER_PLAYLISTS_URL\n\n        while (more) {\n            const response = await spotifyGetRequest(pageUrl, accessToken)\n            playlists.push(...response.items)\n            if (response.next) {\n                pageUrl = response.next\n            } else {\n                more = false\n            }\n        }\n        return playlists\n    } catch (err) {\n        console.error('Error getting all user playlists', err)\n        return null\n    }\n}\n\n/**\n * Get all the tracks for a given set of playlists. Returns a map from the playlist\n * name to the array of tracks. Returns null if any of the fetches fail.\n * @param {string} accessToken \n * @param {Spotify Playlist Array} playlists \n */\nexport const getAllTracksForManyPlaylists = async (accessToken, playlists) => {\n    // We'll use parallel arrays for these\n    const promises = [];\n    const playlistNames = []\n    for (const playlist of playlists) {\n        promises.push(getAllTracksForSinglePlaylist(accessToken, playlist.id))\n        playlistNames.push(playlist.name)\n    }\n\n    const promiseResults = await Promise.all(promises)\n    \n    // Since we're using parallel arrays we need to make sure they're in sync\n    const noNulls = promiseResults.every(item => item !== null)\n    if (promiseResults.length !== playlistNames.length || !noNulls) {\n        console.error('Error fetching all tracks in all playlists; further investigation needed')\n        return null\n    }\n\n    const playlistNameToTracksMap = {}\n    for (let i = 0; i < promiseResults.length; i++) {\n        playlistNameToTracksMap[playlistNames[i]] = promiseResults[i]\n    }\n\n    return playlistNameToTracksMap;\n}\n\n/**\n * Get all tracks in a given Spotify playlist. Returns null if it fails. \n * @param {string} accessToken \n * @param {string} playlistId \n */\nexport const getAllTracksForSinglePlaylist = async (accessToken, playlistId) => {\n    try {\n        const tracks = []\n        let more = true\n        let pageUrl = GET_PLAYLIST_TRACKS_URL(playlistId)\n\n        while (more) {\n            const response = await spotifyGetRequest(pageUrl, accessToken)\n            tracks.push(...response.items)\n            if (response.next) {\n                pageUrl = response.next\n            } else {\n                more = false\n            }\n        }\n        return tracks\n    } catch (err) {\n        console.error(`Error getting tracks for playlist ${playlistId}`, err)\n        return null\n    }\n}\n","import React, { Component } from 'react';\nimport spinner from '../assets/spinner.gif'\nimport './AllTracks.css';\nimport { getAllTracksForManyPlaylists, getAllUserPlaylists } from '../api/spotify';\n\nclass AllTracks extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playlists: [],\n      playlistNameToTracksMap: {},\n      filteredTracks: [],\n      searchText: '',\n      loading: false,\n      error: false,\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true })\n\n    const playlists = await getAllUserPlaylists(this.props.access_token)\n\n    if (playlists === null) {\n      this.setState({ loading: false, error: true })\n      return\n    } else if (playlists.length === 0) {\n      // TODO: handle when user has 0 playlists\n      console.error('Did not find any playlists.')\n      this.setState({ loading: false, error: true })\n      return\n    }\n\n    const playlistNameToTracksMap = await getAllTracksForManyPlaylists(this.props.access_token, playlists)\n\n    if (playlistNameToTracksMap === null) {\n      this.setState({ loading: false, error: true })\n      return\n    } else if (Object.values(playlistNameToTracksMap).every(item => item.length === 0)) {\n      // TODO: handle an edge case where user has 0 tracks in any playlists\n      console.error('Did not find any tracks in any playlists.')\n      this.setState({ loading: false, error: true })\n    }\n\n    this.setState({ playlistNameToTracksMap }, () => {\n      this.applyFilter(() => this.setState({ loading: false }))\n    })\n  }\n\n  applyFilter(callback) {\n    const { playlistNameToTracksMap, searchText } = this.state;\n\n    let filteredTracks = [];\n\n    for (const [playlistName, tracks] of Object.entries(playlistNameToTracksMap)) {\n      for (const trackObj of tracks) {\n\n        const track = trackObj.track\n  \n        if (!track) {\n          console.error(`Track does not have expected data`)\n          continue\n        }\n\n        // We'll do some validation for expected properties on the data\n        if (!track.name || !track.artists || !track.album || !track.id) {\n          console.error(`Track does not have expected data`)\n          continue\n        }\n\n        const trackNameMatch =\n          (track.name).toLowerCase()\n            .includes(searchText.toLowerCase())\n        \n        const joinedArtists = track.artists.map(el => el.name).join(', ')\n        const artistMatch =\n        joinedArtists.toLowerCase()\n            .includes(searchText.toLowerCase())\n        \n        const albumMatch =\n          (track.album.name).toLowerCase()\n            .includes(searchText.toLowerCase())\n\n        if (trackNameMatch || artistMatch || albumMatch) {\n          filteredTracks.push({\n            key: `${playlistName}-${track.id}`,\n            playlistName: playlistName,\n            trackName: track.name,\n            artist: joinedArtists,\n            album: track.album.name,\n          })\n        }\n      }\n    }\n\n    this.setState({ filteredTracks }, callback);\n  }\n\n  renderFilteredTracks() {\n    let { filteredTracks } = this.state\n    const maxSize = 500;\n\n    if (!filteredTracks) return null;\n\n    return filteredTracks.slice(0, maxSize).map((track) => {\n      return (\n        <tr key={track.key} className=\"TrackList_Row\">\n          <td className=\"Tracklist_Playlist\">{track.playlistName}</td>\n          <td className=\"Tracklist_Title\">{track.trackName}</td>\n          <td className=\"Tracklist_Artist_Album\">{track.artist}</td>\n          <td className=\"Tracklist_Artist_Album\">{track.album}</td>\n        </tr>\n      )\n    })\n  }\n\n  numTracks() {\n    const { playlistNameToTracksMap } = this.state\n    if (!playlistNameToTracksMap) return 0\n\n    return Object.values(playlistNameToTracksMap).map(item => item.length).reduce((acc, curr) => acc + curr, 0)\n  }\n\n  filterByKey(key) {\n    this.setState((prevState) => {\n      return {\n        filteredTracks: prevState.filteredTracks.sort((a, b) => {\n          return a[key].toLowerCase().localeCompare(b[key].toLowerCase());\n        })\n      }\n    });\n  }\n\n  render() {\n    return (\n      this.state.error ? <p>ERROR</p> :\n        this.state.loading ? <div className=\"centered\"><img src={spinner} className=\"Spinner\" alt=\"loading...\" /></div> :\n      <div className=\"AllTracks\">\n          <p className=\"PlaylistHeader_Name\">All Tracks</p>\n            <p className=\"PlaylistHeader_Subtitle\">\n              <span className=\"Bold\">{this.numTracks()}</span> total tracks • <span className=\"Bold\">{this.state.filteredTracks.length}</span> filtered tracks\n            </p>\n            <p className=\"PlaylistHeader_Subtitle\"></p>\n          <form onSubmit={(e) => { e.preventDefault(); this.applyFilter() }}>\n          <input\n            className=\"SearchBar\"\n            placeholder=\"Search a track name, artist, or album...\"\n            type=\"text\"\n            onChange={(e) => this.setState({ searchText: e.target.value })}\n            value={this.state.searchText}\n            />\n        </form>\n        <div>\n          <table className=\"AllTracks_TrackList\">\n            <tbody>\n              <tr>\n                <th\n                  className=\"TrackList_HeaderCell\"\n                  onClick={() => this.filterByKey('playlistName')}\n                >PLAYLIST</th>\n                <th\n                  className=\"TrackList_HeaderCell\"\n                  onClick={() => this.filterByKey('trackName')}\n                >TITLE</th>\n                <th\n                  className=\"TrackList_HeaderCell\"\n                  onClick={() => this.filterByKey('artist')}\n                >ARTIST</th>\n                <th\n                  className=\"TrackList_HeaderCell\"\n                  onClick={() => this.filterByKey('album')}\n                >ALBUM</th>\n              </tr>\n                {this.renderFilteredTracks()}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AllTracks;\n","import React from 'react';\nimport './Header.css';\n\nfunction Header(props) {\n  const { user } = props;\n\n  return (\n    <div className=\"Header\">\n      {user && user.images ? (\n        <img className=\"Header_Img\" src={user.images[0].url || ''} alt=\"user img\" />\n      ) : (\n        <span />\n      )}\n      <p className=\"Header_Name\">{user.display_name}</p>\n      <button type=\"button\" className=\"Header_Logout\" onClick={() => props.logout()}>Log Out</button>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport AllTracks from '../../components/AllTracks'\nimport Header from '../../components/Header.jsx';\nimport { getUserProfile } from '../../api/spotify'\nimport './Home.css';\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      access_token: this.props.cookies.get('access_token') || '',\n      user: {\n        display_name: '',\n        images: [\n          {\n            url: '',\n          }\n        ],\n      },\n    };\n  }\n\n  async componentDidMount() {\n    if (!this.state.access_token) {\n      this.props.history.push(\"/\")\n    } else {\n      const user = await getUserProfile(this.state.access_token)\n      if (user) {\n        this.setState({ user });\n      } else {\n        await this.logout()\n      }\n    }\n  }\n\n  /**\n   * 1. Removes the access token cookie\n   * 2. Sets the access token in the state to ''\n   * 3. Navigates to the homepage\n   */\n  async logout() {\n    await this.props.cookies.remove('access_token');\n    this.setState({ access_token: '' }, () => { this.props.history.push(\"/\") });\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <Header user={this.state.user} logout={this.logout.bind(this)}></Header>\n        <AllTracks\n          access_token={this.state.access_token}\n        />\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  cookies: instanceOf(Cookies).isRequired,\n};\n\nexport default withCookies(Home);\n","/* Constants used throughout the application */\n\nexport const clientID = 'bc800faa1cb3438da94f230ba04a1e1b';\n\nexport const clientSecret = '36d268ad41f24665a02dabe2d5ac8e5a';\n\nexport const scopes = 'user-read-private user-read-email playlist-read-private';\n\nexport const redirect_uri =\n  (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ?\n    'http://localhost:3000/' :\n    'https://jacobfisher18.github.io/playlist_analyzer/'\n","import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { authWithSpotify } from '../../api/auth';\nimport './Landing.css';\n\nclass Landing extends Component {\n  componentDidMount() {\n    const { location } = this.props;\n\n    const access_token = queryString.parse(location.hash).access_token || '';\n\n    if (access_token) {\n      this.props.cookies.set('access_token', access_token);\n      this.props.history.push('/home');\n    } else if (this.props.cookies.get('access_token')) {\n      this.props.history.push('/home');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Landing\">\n        <h3 className=\"Landing_Title_Spotify\">Spotify</h3>\n        <h1 className=\"Landing_Title_Playlist_Analyzer\">PLAYLIST ANALYZER</h1>\n        <h5 className=\"Landing_Title_Web_App\">\n          A web app by\n          {' '}\n          <span className=\"Landing_Title_Name\">Jacob Fisher</span>\n        </h5>\n        <button className=\"Landing_Button_Login\" onClick={() => authWithSpotify()}>\n          LOGIN\n        </button>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  cookies: instanceOf(Cookies).isRequired,\n};\n\nexport default withCookies(Landing);\n","import { clientID, scopes, redirect_uri } from '../utilities/constants';\n\nexport const authWithSpotify = () => {\n  window.location = 'https://accounts.spotify.com/authorize' +\n    '?response_type=token' +\n    '&client_id=' + clientID +\n    (scopes ? '&scope=' + encodeURIComponent(scopes) : '') +\n    '&redirect_uri=' + encodeURIComponent(redirect_uri) + \n    '&show_dialog=true'\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { CookiesProvider } from 'react-cookie';\nimport Home from './pages/Home/Home.jsx'\nimport Landing from './pages/Landing/Landing.jsx'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <CookiesProvider>\n        <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Route path='/' exact component={Landing} />\n          <Route path='/home' component={Home} />\n        </div>\n        </Router>\n      </CookiesProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}