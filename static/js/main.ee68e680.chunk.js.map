{"version":3,"sources":["assets/spinner.gif","utilities/apiRequests.js","components/AllTracks.jsx","components/Header.jsx","pages/Home/Home.jsx","utilities/constants.js","pages/Landing/Landing.jsx","utilities/auth.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","spotifyGetRequest","spotifyURL","access_token","callback","fetch","method","headers","Accept","Content-Type","Authorization","concat","then","response","json","myJson","AllTracks","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","playlists","tracks","filteredTracks","searchText","loading","error","_this2","setState","getPlaylists","getAllTracks","applyFilter","promises","i","length","push","getTracks","id","name","Promise","all","_this3","res","rej","recursivelyGetPlaylists","url","_this4","resolve","reject","items","next","playlist_id","playlist_name","recursivelyGetTracks","result","_this5","prevState","_this$state","j","track","trackNameMatch","toLowerCase","includes","artistMatch","artists","map","el","join","albumMatch","album","key","trackName","artist","slice","react_default","a","createElement","className","reduce","accumulator","currentValue","sort","b","localeCompare","_this6","src","spinner","alt","numTracks","onSubmit","e","preventDefault","placeholder","type","onChange","target","value","onClick","filterByKey","renderFilteredTracks","Component","Header","user","logout","display_name","images","style","clear","Home","cookies","get","getUserProfile","history","remove","components_Header","bind","src_components_AllTracks","withCookies","scopes","Landing","location","queryString","parse","hash","set","window","encodeURIComponent","App","es6","BrowserRouter","basename","process","Route","path","exact","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ee68e680.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.8b9a5cd1.gif\";","export const spotifyGetRequest = (spotifyURL, access_token, callback) => {\n  fetch(spotifyURL, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${access_token}`,\n    },\n  }).then(response => response.json()).then((myJson) => {\n    callback(myJson);\n  });\n};\n","import React, { Component } from 'react';\nimport { spotifyGetRequest } from '../utilities/apiRequests'\nimport spinner from '../assets/spinner.gif'\nimport './AllTracks.css';\n\nclass AllTracks extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playlists: [],\n      tracks: [],\n      filteredTracks: [],\n      searchText: '',\n      loading: false,\n      error: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true })\n    this.getPlaylists().then(() => {\n      this.getAllTracks().then(() => {\n        this.applyFilter(() => this.setState({ loading: false }));\n      }, () => { this.setState({ error: true }) })\n    }, () => { this.setState({ error: true }) })\n  }\n\n  getAllTracks() {\n    const promises = [];\n    for (let i = 0; i < this.state.playlists.length; i++) {\n      promises.push(this.getTracks(this.state.playlists[i].id, this.state.playlists[i].name))\n    }\n\n    return Promise.all(promises);\n  }\n\n  // calls recursivelyGetPlaylists to get all the user's playlists\n  getPlaylists() {\n    this.setState({ playlists: [] })\n    const limit = 50;\n    const spotifyURL = `https://api.spotify.com/v1/me/playlists?&limit=${limit}`;\n\n    return new Promise((res, rej) => {\n      this.recursivelyGetPlaylists(spotifyURL).then(() => {\n        res();\n      }, () => {\n        rej();\n      })\n    })\n  }\n\n  // recursively gets user's playlists 50 at a time from spotify api\n  recursivelyGetPlaylists(url) {\n    return new Promise((resolve, reject) => {\n      spotifyGetRequest(url, this.props.access_token, (myJson) => {\n        this.setState({\n          playlists: this.state.playlists.concat(myJson.items)\n        });\n        if (myJson.next) {\n          this.recursivelyGetPlaylists(myJson.next).then(() => {\n            resolve();\n          }, () => {\n            reject();\n          });\n        } else {\n          if (this.state.playlists.length === 0) {\n            reject();\n          } else {\n            resolve();\n          }\n        }\n      })\n    })\n  }\n\n  /* Get all the tracks for a given playlist*/\n  getTracks(playlist_id, playlist_name) {\n    const spotifyURL = `https://api.spotify.com/v1/playlists/${playlist_id}/tracks`;\n\n    return this.recursivelyGetTracks([], spotifyURL, playlist_id, playlist_name);\n  }\n\n  /* Recursive function for getting playlist tracks one page at a time */\n  recursivelyGetTracks(result, url, playlist_id, playlist_name) {\n    return new Promise((resolve, reject) => {\n      spotifyGetRequest(url, this.props.access_token, (myJson) => {\n        result = result.concat(myJson.items)\n        if (myJson.next) {\n          this.recursivelyGetTracks(result, myJson.next, playlist_id, playlist_name).then(() => {\n            resolve();\n          }, () => {\n            reject();\n          });\n        } else {\n          if (result.length === 0 && myJson.items.length !== 0) reject();\n          else {\n            this.setState(prevState => ({\n              tracks: prevState.tracks.concat([{\n                playlist_name,\n                playlist_id,\n                items: result,\n              }])\n            }), () => resolve());\n          }\n        }\n      });\n    })\n  }\n\n  applyFilter(callback) {\n    const { tracks, searchText } = this.state;\n\n    let filteredTracks = [];\n\n    for (let i = 0; i < tracks.length; i++) {\n      for (let j = 0; j < tracks[i].items.length; j++) {\n\n        if (!tracks[i].items[j] || !tracks[i].items[j].track) {\n          continue;\n        }\n\n        const item = tracks[i].items[j];\n        const track = item.track;\n\n        const trackNameMatch =\n          (track.name).toLowerCase()\n            .includes(searchText.toLowerCase())\n        \n        const artistMatch =\n        track.artists.map(el => el.name).join(' ').toLowerCase()\n            .includes(searchText.toLowerCase())\n        \n        const albumMatch =\n          (track.album.name).toLowerCase()\n            .includes(searchText.toLowerCase())\n\n        if (trackNameMatch || artistMatch || albumMatch) {\n          filteredTracks.push({\n            key: `${tracks[i].playlist_name}-${track.id}`,\n            playlist_name: tracks[i].playlist_name,\n            trackName: track.name,\n            artist: track.artists.map(el => el.name).join(', '),\n            album: track.album.name,\n          })\n        }\n      }\n    }\n\n    this.setState({ filteredTracks }, callback);\n  }\n\n  renderFilteredTracks() {\n    let { filteredTracks } = this.state\n    const maxSize = 500;\n\n    if (!filteredTracks) return null;\n\n    return filteredTracks.slice(0, maxSize).map((track) => {\n      return (\n        <tr key={track.key} className=\"TrackList_Row\">\n          <td className=\"Tracklist_Playlist\">{track.playlist_name}</td>\n          <td className=\"Tracklist_Title\">{track.trackName}</td>\n          <td className=\"Tracklist_Artist_Album\">{track.artist}</td>\n          <td className=\"Tracklist_Artist_Album\">{track.album}</td>\n        </tr>\n      )\n    })\n  }\n\n  numTracks() {\n    if (!(this.state.tracks) || this.state.tracks.length === 0) return 0;\n\n    return this.state.tracks.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.items.length;\n    }, 0)\n  }\n\n  filterByKey(key) {\n    this.setState((prevState) => {\n      return {\n        filteredTracks: prevState.filteredTracks.sort((a, b) => {\n          return a[key].toLowerCase().localeCompare(b[key].toLowerCase());\n        })\n      }\n    });\n  }\n\n  render() {\n    return (\n      this.state.error ? <p>ERROR</p> :\n        this.state.loading ? <div className=\"centered\"><img src={spinner} className=\"Spinner\" alt=\"loading...\" /></div> :\n      <div className=\"AllTracks\">\n          <p className=\"PlaylistHeader_Name\">All Tracks</p>\n            <p className=\"PlaylistHeader_Subtitle\">\n              <span className=\"Bold\">{this.numTracks()}</span> total tracks • <span className=\"Bold\">{this.state.filteredTracks.length}</span> filtered tracks\n            </p>\n            <p className=\"PlaylistHeader_Subtitle\"></p>\n          <form onSubmit={(e) => { e.preventDefault(); this.applyFilter() }}>\n          <input\n            className=\"SearchBar\"\n            placeholder=\"Search a track name, artist, or album...\"\n            type=\"text\"\n            onChange={(e) => this.setState({ searchText: e.target.value })}\n            value={this.state.searchText}\n            />\n        </form>\n        <div>\n          <table className=\"AllTracks_TrackList\">\n            <tbody>\n              <tr>\n                <th\n                  className=\"TrackList_HeaderCell\"\n                  onClick={() => this.filterByKey('playlist_name')}\n                >PLAYLIST</th>\n                <th\n                  className=\"TrackList_HeaderCell\"\n                  onClick={() => this.filterByKey('trackName')}\n                >TITLE</th>\n                <th\n                  className=\"TrackList_HeaderCell\"\n                  onClick={() => this.filterByKey('artist')}\n                >ARTIST</th>\n                <th\n                  className=\"TrackList_HeaderCell\"\n                  onClick={() => this.filterByKey('album')}\n                >ALBUM</th>\n              </tr>\n                {this.renderFilteredTracks()}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AllTracks;\n","import React from 'react';\nimport './Header.css';\n\nfunction Header(props) {\n  const { user } = props;\n\n  return (\n    <div className=\"Header\">\n      <button type=\"button\" className=\"Header_Logout\" onClick={() => props.logout()}>logout</button>\n      <p className=\"Header_Name\">{user.display_name}</p>\n      {user && user.images ? (\n        <img className=\"Header_Img\" src={user.images[0].url || ''} alt=\"user img\" />\n      ) : (\n        <span />\n      )}\n      <div style={{ clear: 'both' }} />\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport AllTracks from '../../components/AllTracks'\nimport Header from '../../components/Header.jsx';\nimport { spotifyGetRequest } from '../../utilities/apiRequests.js';\nimport './Home.css';\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      access_token: this.props.cookies.get('access_token') || '',\n      user: {\n        display_name: '',\n        images: [\n          {\n            url: '',\n          }\n        ],\n      },\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.access_token) {\n      this.props.history.push(\"/\")\n    } else {\n      this.getUserProfile();\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.state.access_token) {\n      this.props.history.push(\"/\")\n    }\n  }\n\n  logout() {\n    this.props.cookies.remove('access_token');\n    this.setState({ access_token: '' });\n  }\n\n  getUserProfile() {\n    const spotifyURL = 'https://api.spotify.com/v1/me';\n\n    spotifyGetRequest(spotifyURL, this.state.access_token, (myJson) => {\n      this.setState({ user: myJson });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <Header user={this.state.user} logout={this.logout.bind(this)}></Header>\n        <AllTracks\n          access_token={this.state.access_token}\n        />\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  cookies: instanceOf(Cookies).isRequired,\n};\n\nexport default withCookies(Home);\n","/* Constants used throughout the application */\n\nexport const clientID = 'bc800faa1cb3438da94f230ba04a1e1b';\n\nexport const clientSecret = '36d268ad41f24665a02dabe2d5ac8e5a';\n\nexport const scopes = 'user-read-private user-read-email playlist-read-private';\n\nexport const redirect_uri =\n  (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ?\n    'http://localhost:3000/' :\n    'https://jacobfisher18.github.io/playlist_analyzer/'\n","import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { authWithSpotify } from '../../utilities/auth';\nimport './Landing.css';\n\nclass Landing extends Component {\n  componentDidMount() {\n    const { location } = this.props;\n\n    const access_token = queryString.parse(location.hash).access_token || '';\n\n    if (access_token) {\n      this.props.cookies.set('access_token', access_token);\n      this.props.history.push('/home');\n    } else if (this.props.cookies.get('access_token')) {\n      this.props.history.push('/home');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Landing\">\n        <h3 className=\"Landing_Title_Spotify\">Spotify</h3>\n        <h1 className=\"Landing_Title_Playlist_Analyzer\">PLAYLIST ANALYZER</h1>\n        <h5 className=\"Landing_Title_Web_App\">\n          A web app by\n          {' '}\n          <span className=\"Landing_Title_Name\">Jacob Fisher</span>\n        </h5>\n        <button className=\"Landing_Button_Login\" onClick={() => authWithSpotify()}>\n          LOGIN\n        </button>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  cookies: instanceOf(Cookies).isRequired,\n};\n\nexport default withCookies(Landing);\n","import { clientID, scopes, redirect_uri } from './constants';\n\nexport const authWithSpotify = () => {\n  window.location = 'https://accounts.spotify.com/authorize' +\n    '?response_type=token' +\n    '&client_id=' + clientID +\n    (scopes ? '&scope=' + encodeURIComponent(scopes) : '') +\n    '&redirect_uri=' + encodeURIComponent(redirect_uri) + \n    '&show_dialog=true'\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { CookiesProvider } from 'react-cookie';\nimport Home from './pages/Home/Home.jsx'\nimport Landing from './pages/Landing/Landing.jsx'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <CookiesProvider>\n        <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Route path='/' exact component={Landing} />\n          <Route path='/home' component={Home} />\n        </div>\n        </Router>\n      </CookiesProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}