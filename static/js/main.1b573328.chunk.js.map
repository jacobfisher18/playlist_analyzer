{"version":3,"sources":["utilities/time.ts","api/spotify.ts","hooks/useTracks.ts","components/AllTracks.tsx","components/Header.tsx","pages/Home/Home.tsx","api/auth.ts","utilities/constants.ts","styles/colors.ts","pages/Landing/Landing.tsx","App.tsx","index.js"],"names":["sleep","ms","Promise","resolve","setTimeout","GET_ALL_USER_PLAYLISTS_URL","concat","GET_PLAYLIST_TRACKS_URL","playlistId","spotifyGetRequest","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","spotifyURL","accessToken","response","retryAfterHeader","retryAfterSeconds","wrap","_context","prev","next","fetch","method","headers","Accept","Content-Type","Authorization","sent","status","abrupt","json","get","Error","parseInt","console","log","stop","_x","_x2","apply","this","arguments","getUserProfile","_ref2","_callee2","user","_context2","t0","error","_x3","getAllUserPlaylists","_ref3","_callee3","playlists","more","pageUrl","_context3","push","toConsumableArray","items","_x4","getAllTracksForManyPlaylists","_ref4","_callee5","playlistNameToTracksMap","chunks","_iterator","_step","_chunk","_context5","chunk","_createForOfIteratorHelper","s","n","done","value","all","map","_ref5","_callee4","playlist","result","_context4","getAllTracksForSinglePlaylist","id","name","_x7","e","f","finish","_x5","_x6","_ref6","_callee6","tracks","_context6","_x8","_x9","AllTracks","props","_useState","useState","_useState2","slicedToArray","filteredTracks","setFilteredTracks","_useState3","_useState4","searchText","setSearchText","_useTracks","spotifyAccessToken","allTracks","setAllTracks","loading","setLoading","_useState5","_useState6","setError","useEffect","newAllTracks","_i","_Object$entries","playlistName","trackObj","track","length","values","every","item","entries","useTracks_createForOfIteratorHelper","artists","album","objectSpread","init","useTracks","applyFilter","AllTracks_createForOfIteratorHelper","trackNameMatch","toLowerCase","includes","artistMatch","el","join","albumMatch","err","react_default","createElement","Text","Container","p","Title","order","Space","h","onSubmit","preventDefault","TextInput","disabled","placeholder","onChange","event","currentTarget","style","display","flexDirection","alignItems","paddingTop","Loader","variant","Fragment","Table","slice","key","Header","_useMantineColorSchem","useMantineColorScheme","colorScheme","toggleColorScheme","dark","py","justifyContent","paddingLeft","paddingRight","margin","Switch","size","checked","onLabel","offLabel","images","Avatar","src","url","radius","w","display_name","Button","onClick","logout","withCookies","cookies","setAccessToken","setUser","_user","history","remove","components_Header","bind","components_AllTracks","SPOTIFY_AUTH_URL","encodeURIComponent","COLORS","access_token","queryString","parse","location","hash","set","position","width","height","textAlign","backgroundImage","backgroundColor","padding","borderRadius","boxShadow","color","window","borderWidth","App","setColorScheme","es6","ColorSchemeProvider","MantineProvider","theme","colors","primary","primaryColor","withGlobalStyles","withNormalizeCSS","BrowserRouter","basename","process","Route","path","exact","component","Landing","Home","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1b573328.chunk.js","sourcesContent":["export const sleep = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n","import { sleep } from \"../utilities/time\";\nimport { chunk } from \"lodash\";\n\nconst MAX_PLAYLISTS_PER_REQUEST = 50;\n\nconst GET_USER_PROFILE_URL = \"https://api.spotify.com/v1/me\";\nconst GET_ALL_USER_PLAYLISTS_URL = `https://api.spotify.com/v1/me/playlists?&limit=${MAX_PLAYLISTS_PER_REQUEST}`;\nconst GET_PLAYLIST_TRACKS_URL = (playlistId: string) =>\n  `https://api.spotify.com/v1/playlists/${playlistId}/tracks`;\n\n/**\n * A generic request to the Spotify API; all fetches should use this\n */\nconst spotifyGetRequest = async (\n  spotifyURL: string,\n  accessToken: string\n): Promise<any> => {\n  const response = await fetch(spotifyURL, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n  if (response.status === 200) {\n    return response.json();\n  } else if (response.status === 429) {\n    const retryAfterHeader = response.headers.get(\"retry-after\");\n    if (!retryAfterHeader) {\n      throw new Error(`Rate limited but could not get retry-after value`);\n    }\n    const retryAfterSeconds = parseInt(retryAfterHeader);\n    if (retryAfterSeconds > 10) {\n      throw new Error(\n        `Rate limited with a long retry-after of ${retryAfterSeconds} seconds, not retrying`\n      );\n    }\n    console.log(`Rate limited, retrying in ${retryAfterSeconds} seconds`);\n    await sleep(retryAfterSeconds * 1000);\n    return await spotifyGetRequest(spotifyURL, accessToken);\n  } else {\n    throw new Error(`Recieved ${response.status} when fetching`);\n  }\n};\n\n/**\n * Gets the current user profile, or null if it fails\n */\nexport const getUserProfile = async (accessToken: string) => {\n  try {\n    const user = await spotifyGetRequest(GET_USER_PROFILE_URL, accessToken);\n    return user;\n  } catch (err) {\n    console.error(\"Error getting the current user profile\", err);\n    return null;\n  }\n};\n\n/**\n * Get all playlists for the current user, or null if it fails\n */\nexport const getAllUserPlaylists = async (accessToken: string) => {\n  try {\n    const playlists = [];\n    let more = true;\n    let pageUrl = GET_ALL_USER_PLAYLISTS_URL;\n\n    while (more) {\n      const response = await spotifyGetRequest(pageUrl, accessToken);\n      playlists.push(...response.items);\n      if (response.next) {\n        pageUrl = response.next;\n      } else {\n        more = false;\n      }\n\n      // Sleep a bit to try to avoid getting rate limited\n      await sleep(250);\n    }\n    return playlists;\n  } catch (err) {\n    console.error(\"Error getting all user playlists\", err);\n    return null;\n  }\n};\n\n/**\n * Get all the tracks for a given set of playlists. Returns a map from the playlist\n * name to the array of tracks. Returns null if any of the fetches fail.\n */\nexport const getAllTracksForManyPlaylists = async (\n  accessToken: string,\n  playlists: Array<any>\n) => {\n  const playlistNameToTracksMap: Record<string, any> = {};\n\n  const chunks = chunk(playlists, 10);\n\n  for (const chunk of chunks) {\n    await Promise.all(\n      chunk.map(async (playlist) => {\n        const result = await getAllTracksForSinglePlaylist(\n          accessToken,\n          playlist.id\n        );\n        if (!result) {\n          console.error(\"Error fetching all tracks in all playlists\");\n          return;\n        }\n        playlistNameToTracksMap[playlist.name] = result;\n      })\n    );\n  }\n\n  return playlistNameToTracksMap;\n};\n\n/**\n * Get all tracks in a given Spotify playlist. Returns null if it fails.\n */\nconst getAllTracksForSinglePlaylist = async (\n  accessToken: string,\n  playlistId: string\n) => {\n  try {\n    const tracks = [];\n    let more = true;\n    let pageUrl = GET_PLAYLIST_TRACKS_URL(playlistId);\n\n    while (more) {\n      const response = await spotifyGetRequest(pageUrl, accessToken);\n      tracks.push(...response.items);\n      if (response.next) {\n        pageUrl = response.next;\n      } else {\n        more = false;\n      }\n    }\n    return tracks;\n  } catch (err) {\n    console.error(`Error getting tracks for playlist ${playlistId}`, err);\n    return null;\n  }\n};\n","import { useEffect, useState } from \"react\";\nimport {\n  getAllTracksForManyPlaylists,\n  getAllUserPlaylists,\n} from \"../api/spotify\";\n\nexport interface Track {\n  id: string;\n  playlistName: string;\n  name: string;\n  artists: Array<{ name: string }>;\n  album: { name: string };\n}\n\nexport const useTracks = (spotifyAccessToken: string) => {\n  const [allTracks, setAllTracks] = useState<Array<Track>>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const init = async () => {\n      setLoading(true);\n\n      const playlists = await getAllUserPlaylists(spotifyAccessToken);\n\n      if (playlists === null) {\n        setLoading(false);\n        setError(true);\n        return;\n      }\n\n      if (!playlists.length) {\n        // TODO: handle when user has 0 playlists\n        console.error(\"Did not find any playlists.\");\n        setLoading(false);\n        setError(true);\n        return;\n      }\n\n      const playlistNameToTracksMap = await getAllTracksForManyPlaylists(\n        spotifyAccessToken,\n        playlists\n      );\n\n      if (playlistNameToTracksMap === null) {\n        setLoading(false);\n        setError(true);\n        return;\n      }\n\n      if (\n        Object.values(playlistNameToTracksMap).every(\n          (item) => item.length === 0\n        )\n      ) {\n        // TODO: handle an edge case where user has 0 tracks in any playlists\n        console.error(\"Did not find any tracks in any playlists.\");\n        setLoading(false);\n        setError(true);\n        return;\n      }\n\n      const newAllTracks: Array<Track> = [];\n      for (const [playlistName, tracks] of Object.entries(\n        playlistNameToTracksMap\n      )) {\n        for (const trackObj of tracks) {\n          const track = trackObj.track;\n\n          // We'll do some validation for expected properties on the data\n          // TODO: Push this up into client\n          if (!track.name || !track.artists || !track.album || !track.id) {\n            console.error(`Track does not have expected data`);\n            continue;\n          }\n          newAllTracks.push({ ...track, playlistName });\n        }\n      }\n\n      setAllTracks(newAllTracks);\n\n      // This was previously happening after the set state, not sure what's up here\n      //   applyFilter();\n      setLoading(false);\n    };\n\n    init();\n  }, []);\n\n  return {\n    allTracks,\n    loading,\n    error,\n  };\n};\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { Track, useTracks } from \"../hooks/useTracks\";\nimport {\n  Title,\n  TextInput,\n  Table,\n  Loader,\n  Container,\n  Space,\n  Text,\n} from \"@mantine/core\";\n\ninterface Props {\n  accessToken: string;\n}\n\nconst AllTracks = (props: Props): JSX.Element => {\n  const [filteredTracks, setFilteredTracks] = useState<Array<Track>>([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const { allTracks, loading, error } = useTracks(props.accessToken);\n\n  useEffect(() => {\n    applyFilter();\n  }, [allTracks]);\n\n  const applyFilter = () => {\n    let filteredTracks = [];\n\n    for (const track of allTracks) {\n      const trackNameMatch = track.name\n        .toLowerCase()\n        .includes(searchText.toLowerCase());\n\n      const artistMatch = track.artists\n        .map((el: any) => el.name)\n        .join()\n        .toLowerCase()\n        .includes(searchText.toLowerCase());\n\n      const albumMatch = track.album.name\n        .toLowerCase()\n        .includes(searchText.toLowerCase());\n\n      if (trackNameMatch || artistMatch || albumMatch) {\n        filteredTracks.push(track);\n      }\n    }\n\n    setFilteredTracks(filteredTracks);\n  };\n\n  const renderFilteredTracks = () => {\n    const maxSize = 500;\n\n    if (!filteredTracks) return null;\n\n    return filteredTracks.slice(0, maxSize).map((track) => {\n      return (\n        <tr key={`${track.playlistName}-${track.id}`}>\n          <td>{track.playlistName}</td>\n          <td>{track.name}</td>\n          <td>{track.artists.map((el: any) => el.name).join(\", \")}</td>\n          <td>{track.album.name}</td>\n        </tr>\n      );\n    });\n  };\n\n  if (error) {\n    return <Text>There was an error retrieving tracks from Spotify.</Text>;\n  }\n\n  return (\n    <Container p=\"sm\">\n      <Title order={1}>Spotify Search</Title>\n      <Space h=\"sm\" />\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          applyFilter();\n        }}\n      >\n        <TextInput\n          disabled={loading}\n          placeholder=\"Search a track name, artist, or album...\"\n          value={searchText}\n          onChange={(event) => setSearchText(event.currentTarget.value)}\n        />\n      </form>\n      <Space h=\"xl\" />\n\n      {loading ? (\n        <Container\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            paddingTop: 100,\n          }}\n        >\n          <Loader variant=\"bars\" />\n          <Space h=\"sm\" />\n          <Title order={5}>Loading tracks from Spotify</Title>\n        </Container>\n      ) : (\n        <>\n          <Title order={5}>\n            {allTracks.length} total tracks • {filteredTracks.length} filtered\n            tracks\n          </Title>\n          <Space h=\"sm\" />\n          <div>\n            <Table>\n              <thead>\n                <tr>\n                  <th>Playlist</th>\n                  <th>Title</th>\n                  <th>Artist</th>\n                  <th>Album</th>\n                </tr>\n              </thead>\n              <tbody>{renderFilteredTracks()}</tbody>\n            </Table>\n          </div>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default AllTracks;\n","import React from \"react\";\nimport {\n  Avatar,\n  Text,\n  Button,\n  Container,\n  Space,\n  useMantineColorScheme,\n  Switch,\n} from \"@mantine/core\";\nimport { SpotifyUser } from \"../types/user\";\n\nfunction Header(props: { logout: Function; user: SpotifyUser | null }) {\n  const { user } = props;\n\n  const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n  const dark = colorScheme === \"dark\";\n\n  return (\n    <Container\n      py=\"lg\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        paddingLeft: 0,\n        paddingRight: 0,\n      }}\n    >\n      <Container style={{ margin: 0 }}>\n        <Switch\n          size=\"md\"\n          checked={dark}\n          onChange={() => toggleColorScheme()}\n          onLabel=\"LIGHT\"\n          offLabel=\"DARK\"\n        />\n      </Container>\n      <Container\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          margin: 0,\n        }}\n      >\n        {user && user.images ? (\n          <Avatar src={user.images[0].url || \"\"} radius=\"xl\" />\n        ) : (\n          <span />\n        )}\n        <Space w=\"md\" />\n        <Text>{user ? user.display_name : \"\"}</Text>\n        <Space w=\"md\" />\n        <Button onClick={() => props.logout()}>Log Out</Button>\n      </Container>\n    </Container>\n  );\n}\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport { instanceOf } from \"prop-types\";\nimport { withCookies, Cookies } from \"react-cookie\";\nimport AllTracks from \"../../components/AllTracks\";\nimport Header from \"../../components/Header\";\nimport { getUserProfile } from \"../../api/spotify\";\nimport { SpotifyUser } from \"../../types/user\";\n\nconst Home = (props: { cookies: any; history: any }): JSX.Element => {\n  const [accessToken, setAccessToken] = useState(\n    props.cookies.get(\"access_token\") || \"\"\n  );\n  const [user, setUser] = useState<SpotifyUser | null>(null);\n\n  useEffect(() => {\n    const init = async () => {\n      if (!accessToken) {\n        props.history.push(\"/\");\n      } else {\n        const user = await getUserProfile(accessToken);\n        if (user) {\n          setUser(user);\n        } else {\n          await logout();\n        }\n      }\n    };\n\n    init();\n  }, []);\n\n  /**\n   * 1. Removes the access token cookie\n   * 2. Sets the access token in the state to ''\n   * 3. Navigates to the homepage\n   */\n  const logout = async () => {\n    await props.cookies.remove(\"access_token\");\n    setAccessToken(\"\");\n    props.history.push(\"/\");\n  };\n\n  return (\n    <>\n      <Header user={user} logout={logout.bind(this)}></Header>\n      <AllTracks accessToken={accessToken} />\n    </>\n  );\n};\n\nHome.propTypes = {\n  cookies: instanceOf(Cookies).isRequired,\n};\n\nexport default withCookies(Home);\n","import { clientID, scopes, redirect_uri } from \"../utilities/constants\";\n\nconst SPOTIFY_AUTH_URL =\n  \"https://accounts.spotify.com/authorize\" +\n  \"?response_type=token\" +\n  `&client_id=${clientID}` +\n  `&scope=${encodeURIComponent(scopes)}` +\n  `&redirect_uri=${encodeURIComponent(redirect_uri)}` +\n  \"&show_dialog=true\";\n\nexport const authWithSpotify = () => {\n  (window.location as any) = SPOTIFY_AUTH_URL;\n};\n","/* Constants used throughout the application */\n\nexport const clientID = \"bc800faa1cb3438da94f230ba04a1e1b\";\n\nexport const clientSecret = \"36d268ad41f24665a02dabe2d5ac8e5a\";\n\nexport const scopes = \"user-read-private user-read-email playlist-read-private\";\n\nexport const redirect_uri =\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\n    ? \"http://localhost:3000/\"\n    : \"https://jacobfisher18.github.io/playlist_analyzer/\";\n","export const COLORS = {\n  primary: \"#2dc760\",\n};\n","import React, { useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport { instanceOf } from \"prop-types\";\nimport { withCookies, Cookies } from \"react-cookie\";\nimport { authWithSpotify } from \"../../api/auth\";\nimport { Button, Title, Container, Space, Text } from \"@mantine/core\";\nimport { COLORS } from \"../../styles/colors\";\n\nexport const Landing = (props: {\n  location: any;\n  cookies: any;\n  history: any;\n}): JSX.Element => {\n  useEffect(() => {\n    const access_token = queryString.parse(location.hash).access_token || \"\";\n\n    if (access_token) {\n      props.cookies.set(\"access_token\", access_token);\n      props.history.push(\"/home\");\n    } else if (props.cookies.get(\"access_token\")) {\n      props.history.push(\"/home\");\n    }\n  }, []);\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        width: \"100%\",\n        height: \"100%\",\n        textAlign: \"center\",\n        paddingTop: 120,\n        margin: 0,\n        backgroundImage: \"linear-gradient(-116deg, #b873ac 5%, #8bb2e2 100%)\",\n      }}\n    >\n      <Container\n        style={{\n          backgroundColor: \"white\",\n          width: 500,\n          padding: 50,\n          borderRadius: 5,\n          boxShadow: \"4px 4px 4px rgba(0,0,0,0.08)\",\n        }}\n      >\n        <Title order={3} color={COLORS.primary}>\n          Spotify\n        </Title>\n        <Space h=\"xs\" />\n        <Title order={1} color=\"#555555\">\n          Playlist Search\n        </Title>\n        <Space h=\"lg\" />\n        <Text color=\"#555555\">\n          Search all your tracks across all your playlists at once\n        </Text>\n        <Space h=\"xl\" />\n        <Button\n          onClick={() => authWithSpotify()}\n          style={{\n            backgroundColor: COLORS.primary,\n            borderRadius: 100,\n            borderWidth: 0,\n          }}\n        >\n          Login with Spotify\n        </Button>\n      </Container>\n    </div>\n  );\n};\n\nLanding.propTypes = {\n  cookies: instanceOf(Cookies).isRequired,\n};\n\nexport default withCookies(Landing);\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { CookiesProvider } from \"react-cookie\";\nimport Home from \"./pages/Home/Home\";\nimport Landing from \"./pages/Landing/Landing\";\nimport {\n  MantineProvider,\n  ColorSchemeProvider,\n  ColorScheme,\n} from \"@mantine/core\";\nimport { COLORS } from \"./styles/colors\";\n\nconst App = (): JSX.Element => {\n  const [colorScheme, setColorScheme] = useState<ColorScheme>(\"dark\");\n  const toggleColorScheme = (value?: ColorScheme) =>\n    setColorScheme(value || (colorScheme === \"dark\" ? \"light\" : \"dark\"));\n\n  return (\n    <CookiesProvider>\n      <ColorSchemeProvider\n        colorScheme={colorScheme}\n        toggleColorScheme={toggleColorScheme}\n      >\n        <MantineProvider\n          theme={{\n            colorScheme,\n            colors: {\n              primary: [\n                // Theme requires 10 shades of each color\n                COLORS.primary,\n                COLORS.primary,\n                COLORS.primary,\n                COLORS.primary,\n                COLORS.primary,\n                COLORS.primary,\n                COLORS.primary,\n                COLORS.primary,\n                COLORS.primary,\n                COLORS.primary,\n              ],\n            },\n            primaryColor: \"primary\",\n          }}\n          withGlobalStyles\n          withNormalizeCSS\n        >\n          <Router basename={process.env.PUBLIC_URL}>\n            <div>\n              <Route path=\"/\" exact component={Landing} />\n              <Route path=\"/home\" component={Home} />\n            </div>\n          </Router>\n        </MantineProvider>\n      </ColorSchemeProvider>\n    </CookiesProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}