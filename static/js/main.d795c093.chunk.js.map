{"version":3,"sources":["components/Sidebar.jsx","components/Header.jsx","components/PlaylistHeader.jsx","components/TrackList.jsx","components/Overview.jsx","components/FeatureBar.jsx","components/Stats.jsx","utilities/constants.js","components/PlaylistMenu.jsx","utilities/apiRequests.js","pages/Home/Home.jsx","pages/Landing/Landing.jsx","utilities/auth.js","App.js","index.js"],"names":["Sidebar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activePlaylist","_this2","playlists","map","p","react_default","a","createElement","className","currentPlaylist","name","key","onClick","setCurrentPlaylist","renderPlaylists","Component","Header","user","type","logout","display_name","images","src","url","alt","style","clear","PlaylistHeader","playlist","concat","tracks","total","TrackList","items","item","track","artists","el","join","album","popularity","renderTracks","Overview","owner","public","collaborative","FeatureBar","value","multiplier","outerWidthStyle","width","innerWidthStyle","data-tip","dist_default","effect","features","description","Stats","feature","arr","trackStats","avg","reduce","accumulator","Number","length","Math","round","react_tooltip_lite_dist_default","content","padding","components_FeatureBar","getAvg","renderAverages","scopes","playlist_menu_tabs","PlaylistMenu","_this$props","activeTab","selectTab","tab","renderTabs","spotifyGetRequest","spotifyURL","access_token","callback","fetch","method","headers","Accept","Content-Type","Authorization","then","response","json","myJson","Home","cookies","get","currentPlaylistTracks","currentPlaylistTrackStats","getPlaylists","getUserProfile","history","push","set","setState","_this3","getTracks","id","playlist_id","recursivelyGetTracks","_this4","next","getTrackStats","_this5","track_ids","i","subarray","slice","toString","audio_features","components_Overview","src_components_TrackList","src_components_Stats","components_Header","bind","src_components_Sidebar","components_PlaylistHeader","src_components_PlaylistMenu","renderActiveTab","withCookies","Landing","location","queryString","parse","hash","window","encodeURIComponent","App","es6","BrowserRouter","basename","process","Route","path","exact","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d795c093.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Sidebar.css';\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activePlaylist: '',\n    };\n  }\n\n  renderPlaylists() {\n    if (this.props.playlists) {return this.props.playlists.map(p => <li\n      className={this.props.currentPlaylist.name === p.name ? 'Sidebar_Playlist_Selected' : 'Sidebar_Playlist_Unselected'}\n      key={p.name}\n      onClick={() => this.props.setCurrentPlaylist(p)}>\n      {p.name}\n    </li>);}\n  }\n\n  render() {\n    return (\n      <div className=\"Sidebar\">\n        <h4 className=\"Sidebar_Title_Playlists\">YOUR PLAYLISTS</h4>\n        {this.renderPlaylists()}\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport './Header.css';\n\nfunction Header(props) {\n  const { user } = props;\n\n  return (\n    <div className=\"Header\">\n      <button type=\"button\" className=\"Header_Logout\" onClick={() => props.logout()}>logout</button>\n      <p className=\"Header_Name\">{user.display_name}</p>\n      {user && user.images ? (\n        <img className=\"Header_Img\" src={user.images[0].url || ''} alt=\"user img\" />\n      ) : (\n        <span />\n      )}\n      <div style={{ clear: 'both' }} />\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './PlaylistHeader.css';\n\nfunction PlaylistHeader(props) {\n  const { playlist } = props;\n\n  return (\n    <div className=\"PlaylistHeader\">\n      <img className=\"PlaylistHeader_Image\" src={playlist.images && playlist.images[0] ? playlist.images[0].url : ''} alt=\"playlist img\" />\n      <div className=\"PlaylistHeader_Metadata\">\n        <h3 className=\"PlaylistHeader_Title\">PLAYLIST</h3>\n        <h1 className=\"PlaylistHeader_Name\">{playlist.name || ''}</h1>\n        <h5 className=\"PlaylistHeader_TrackCount\">\n          {`${playlist.tracks.total || 0} tracks`}\n        </h5>\n      </div>\n    </div>\n  );\n}\n\nexport default PlaylistHeader;\n","import React, { Component } from 'react';\nimport './TrackList.css';\n\nclass TrackList extends Component {\n  renderTracks() {\n    const { items } = this.props;\n\n    if (items) {\n      return items.map(item => (\n        <tr\n          key={item.track.name}\n        >\n          <td className=\"Tracklist_Title\">{item.track.name}</td>\n          <td className=\"Tracklist_Artist_Album\">\n            {item.track.artists.map(el => el.name).join(', ')}\n          </td>\n          <td className=\"Tracklist_Artist_Album\">{item.track.album.name}</td>\n          <td className=\"Tracklist_Popularity\">{item.track.popularity}</td>\n        </tr>\n      ));\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <div className=\"TrackList\">\n        <table>\n          <tbody>\n            <tr>\n              <th>TITLE</th>\n              <th>ARTIST</th>\n              <th>ALBUM</th>\n              <th>POPULARITY</th>\n            </tr>\n            {this.renderTracks()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default TrackList;\n","import React from 'react';\nimport './Overview.css';\n\nfunction Overview(props) {\n  const { playlist } = props;\n\n  return (\n    <div className=\"Overview\">\n      <p>\n        Owner:\n        {' '}\n        {playlist.owner.display_name}\n      </p>\n      <p>\n        {playlist.public ? 'PUBLIC' : 'PRIVATE'}\n        {' | '}\n        {playlist.collaborative ? 'COLLABORATIVE' : 'NOT COLLABORATIVE'}\n      </p>\n      <p>\n        {playlist.tracks.total}\n        {' '}\n        tracks\n      </p>\n    </div>\n  );\n}\n\nexport default Overview;\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport './FeatureBar.css';\n\nfunction FeatureBar(props) {\n  const maxidth = 400;\n  const { value } = props;\n\n  let multiplier = value || 0;\n  if (multiplier < 0 || multiplier > 1) {\n    multiplier = 0;\n  }\n\n  const outerWidthStyle = { width: `${maxidth}px` };\n  const innerWidthStyle = { width: `${multiplier * maxidth}px` };\n\n  return (\n    <div className=\"FeatureBar_Outer\" style={outerWidthStyle}>\n      <div className=\"FeatureBar_Inner\" style={innerWidthStyle} data-tip={value} />\n      <ReactTooltip effect=\"solid\" />\n    </div>\n  );\n}\n\nexport default FeatureBar;\n","import React, { Component } from 'react';\nimport FeatureBar from './FeatureBar.jsx';\nimport Tooltip from 'react-tooltip-lite';\nimport './Stats.css';\n\n// tbd: duration_ms, loudness, tempo, mode, etc.\nconst features = [\n  {\n    name: 'acousticness',\n    description: 'A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.',\n  },\n  {\n    name: 'danceability',\n    description: 'Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.',\n  },\n  {\n    name: 'energy',\n    description: 'Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy.',\n  },\n  {\n    name: 'instrumentalness',\n    description: 'Predicts whether a track contains no vocals. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks.',\n  },\n  {\n    name: 'liveness',\n    description: 'Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.',\n  },\n  {\n    name: 'speechiness',\n    description: 'Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value.',\n  },\n  {\n    name: 'valence',\n    description: 'A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).',\n  },\n]\n\nclass Stats extends Component {\n  \n  getAvg(feature) {\n    const arr = this.props.trackStats || [];\n\n    const avg = arr.reduce((accumulator, track) => accumulator + Number(track[feature]), 0) / arr.length;\n\n    return Math.round(avg * 100) / 100;\n  }\n\n  renderAverages() {\n    return features.map(feature => (\n      <tr\n        className=\"Stats_TableRow\"\n        key={feature.name}\n      >\n        <td className=\"Stats_FeatureName\">\n          <Tooltip content={feature.description} padding=\"20px\">\n            {feature.name}\n          </Tooltip>\n        </td>\n        <td>\n          <FeatureBar value={this.getAvg(feature.name)}/>\n        </td >\n        <td>{this.getAvg(feature.name)}</td>\n      </tr>\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"Stats\">\n        <h1 className=\"Stats_Averages_Title\">Averages</h1>\n        <table>\n          <tbody>\n            {this.renderAverages()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Stats;\n","/* Constants used throughout the application */\n\nexport const clientID = 'bc800faa1cb3438da94f230ba04a1e1b';\n\nexport const clientSecret = '36d268ad41f24665a02dabe2d5ac8e5a';\n\nexport const scopes = 'user-read-private user-read-email playlist-read-private';\n\nexport const redirect_uri =\n  (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ?\n    'http://localhost:3000/' :\n    'https://jacobfisher18.github.io/playlist_analyzer/'\n\nexport const playlist_menu_tabs = ['OVERVIEW', 'TRACKS', 'STATS'];\n","import React, { Component } from 'react';\nimport { playlist_menu_tabs } from '../utilities/constants';\nimport './PlaylistMenu.css';\n\nclass PlaylistMenu extends Component {\n  renderTabs() {\n    const { activeTab, selectTab } = this.props;\n\n    return playlist_menu_tabs.map(tab => (\n      <li\n        className={activeTab === tab ? 'PlaylistMenu_Active_Tab' : ''}\n        onClick={() => selectTab(tab)}\n        key={tab}\n      >\n        {tab}\n      </li>\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"PlaylistMenu\">\n        <ul>\n          {this.renderTabs()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default PlaylistMenu;\n","export const spotifyGetRequest = (spotifyURL, access_token, callback) => {\n  fetch(spotifyURL, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${access_token}`,\n    },\n  }).then(response => response.json()).then((myJson) => {\n    callback(myJson);\n  });\n};\n","import React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport Sidebar from '../../components/Sidebar.jsx';\nimport Header from '../../components/Header.jsx';\nimport PlaylistHeader from '../../components/PlaylistHeader.jsx';\nimport TrackList from '../../components/TrackList.jsx';\nimport Overview from '../../components/Overview.jsx';\nimport Stats from '../../components/Stats.jsx';\nimport PlaylistMenu from '../../components/PlaylistMenu.jsx';\nimport { spotifyGetRequest } from '../../utilities/apiRequests.js';\nimport { playlist_menu_tabs } from '../../utilities/constants.js';\nimport './Home.css';\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      access_token: this.props.cookies.get('access_token') || '',\n      user: {\n        display_name: '',\n        images: [\n          {\n            url: '',\n          }\n        ],\n      },\n      playlists: [],\n      currentPlaylist: {\n        name: '',\n        tracks: {\n          total: 0,\n        },\n        images: [\n          {\n            url: '',\n          }\n        ]\n      },\n      currentPlaylistTracks: [],\n      currentPlaylistTrackStats: [],\n      activeTab: playlist_menu_tabs[0],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.access_token) {\n      this.props.history.push(\"/\")\n    } else {\n      this.getPlaylists();\n      this.getUserProfile();\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.state.access_token) {\n      this.props.history.push(\"/\")\n    }\n  }\n\n  logout() {\n    this.props.cookies.set('access_token', '');\n    this.setState({ access_token: '' });\n  }\n\n  getPlaylists() {\n    const limit = 50;\n    const spotifyURL = `https://api.spotify.com/v1/me/playlists?&limit=${limit}`;\n\n    spotifyGetRequest(spotifyURL, this.state.access_token, (myJson) => {\n      this.setState({ playlists: myJson.items });\n      this.setCurrentPlaylist(myJson.items ? myJson.items[0] : []);\n    });\n  }\n\n  getUserProfile() {\n    const spotifyURL = 'https://api.spotify.com/v1/me';\n\n    spotifyGetRequest(spotifyURL, this.state.access_token, (myJson) => {\n      this.setState({ user: myJson });\n    });\n  }\n\n  setCurrentPlaylist(currentPlaylist) {\n    this.setState({ currentPlaylist });\n    this.getTracks(currentPlaylist.id);\n  }\n\n  /* Get all the tracks for a given playlist*/\n  /* Also gets the stats for all the tracks upon completion */\n  getTracks(playlist_id) {\n    this.setState({ currentPlaylistTracks: [] });\n\n    if (playlist_id) {\n      const spotifyURL = `https://api.spotify.com/v1/playlists/${playlist_id}/tracks`;\n      this.recursivelyGetTracks(spotifyURL);\n    }\n  }\n\n  /* Recursive function for getting playlist tracks one page at a time */\n  /* Calls getTrackStats upon completion */\n  recursivelyGetTracks(url) {\n    spotifyGetRequest(url, this.state.access_token, (myJson) => {\n      this.setState({\n        currentPlaylistTracks: this.state.currentPlaylistTracks.concat(myJson.items)\n      });\n      if (myJson.next) {\n        this.recursivelyGetTracks(myJson.next);\n      } else {\n        this.getTrackStats();\n      }\n    });\n  }\n\n  /* Get audio analysis for all the tracks in the current playlist */\n  getTrackStats() {\n    this.setState({ currentPlaylistTrackStats: [] });\n\n    const track_ids = this.state.currentPlaylistTracks.map(item => {\n      return item.track.id;\n    })\n\n    // can only request 100 at a time from the Spotify API\n    for (let i = 0; i < track_ids.length; i += 100) {\n      let subarray = track_ids.slice(i, i + 100);\n      \n      let spotifyURL = `https://api.spotify.com/v1/audio-features/?ids=${subarray.toString()}`;\n\n      spotifyGetRequest(spotifyURL, this.state.access_token, (myJson) => {\n        this.setState({\n          currentPlaylistTrackStats: this.state.currentPlaylistTrackStats.concat(myJson.audio_features)\n        });\n      });\n    }\n  }\n\n  renderActiveTab() {\n    if (this.state.activeTab === 'OVERVIEW') {\n      return <Overview playlist={this.state.currentPlaylist} />\n    } else if (this.state.activeTab === 'TRACKS') {\n      return <TrackList items={this.state.currentPlaylistTracks} />\n    } else if (this.state.activeTab === 'STATS') {\n      return <Stats trackStats={this.state.currentPlaylistTrackStats} />\n    }\n  }\n\n  selectTab(tab) {\n    this.setState({ activeTab: tab });\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <Header user={this.state.user} logout={this.logout.bind(this)}></Header>\n        <Sidebar currentPlaylist={this.state.currentPlaylist} playlists={this.state.playlists} setCurrentPlaylist={this.setCurrentPlaylist.bind(this)}></Sidebar>\n        <div className=\"Home_Main_Content\">\n          {this.state.currentPlaylist.name ? (\n            <div>\n              <PlaylistHeader playlist={this.state.currentPlaylist} access_token={this.state.access_token}></PlaylistHeader>\n              <PlaylistMenu activeTab={this.state.activeTab} selectTab={this.selectTab.bind(this)}></PlaylistMenu>\n              {this.renderActiveTab()}\n            </div>\n          ) : (\n              <p></p>\n            )}\n          {/* <button onClick={() => this.getTrackStats()}>Get Track Stats</button> */}\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  cookies: instanceOf(Cookies).isRequired,\n};\n\nexport default withCookies(Home);\n","import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { authWithSpotify } from '../../utilities/auth';\nimport './Landing.css';\n\nclass Landing extends Component {\n  componentDidMount() {\n    const { location } = this.props;\n\n    const access_token = queryString.parse(location.hash).access_token || '';\n\n    if (access_token) {\n      this.props.cookies.set('access_token', access_token);\n      this.props.history.push('/home');\n    } else if (this.props.cookies.get('access_token')) {\n      this.props.history.push('/home');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Landing\">\n        <h3 className=\"Landing_Title_Spotify\">Spotify</h3>\n        <h1 className=\"Landing_Title_Playlist_Analyzer\">PLAYLIST ANALYZER</h1>\n        <h5 className=\"Landing_Title_Web_App\">\n          A web app by\n          {' '}\n          <span className=\"Landing_Title_Name\">Jacob Fisher</span>\n        </h5>\n        <button className=\"Landing_Button_Login\" onClick={() => authWithSpotify()}>\n          LOGIN\n        </button>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  cookies: instanceOf(Cookies).isRequired,\n};\n\nexport default withCookies(Landing);\n","import { clientID, scopes, redirect_uri } from './constants';\n\nexport const authWithSpotify = () => {\n  window.location = 'https://accounts.spotify.com/authorize' +\n    '?response_type=token' +\n    '&client_id=' + clientID +\n    (scopes ? '&scope=' + encodeURIComponent(scopes) : '') +\n    '&redirect_uri=' + encodeURIComponent(redirect_uri)\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { CookiesProvider } from 'react-cookie';\nimport Home from './pages/Home/Home.jsx'\nimport Landing from './pages/Landing/Landing.jsx'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <CookiesProvider>\n        <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Route path='/' exact component={Landing} />\n          <Route path='/home' component={Home} />\n        </div>\n        </Router>\n      </CookiesProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}