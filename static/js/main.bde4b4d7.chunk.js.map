{"version":3,"sources":["assets/spinner.gif","utilities/time.js","api/spotify.js","components/AllTracks.jsx","components/Header.jsx","pages/Home/Home.jsx","utilities/constants.js","pages/Landing/Landing.jsx","api/auth.js","App.tsx","index.js"],"names":["module","exports","__webpack_require__","p","sleep","ms","Promise","resolve","setTimeout","GET_ALL_USER_PLAYLISTS_URL","concat","GET_PLAYLIST_TRACKS_URL","playlistId","spotifyGetRequest","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","spotifyURL","accessToken","response","retryAfterSeconds","wrap","_context","prev","next","fetch","method","headers","Accept","Content-Type","Authorization","sent","status","abrupt","json","get","Error","console","log","stop","_x","_x2","apply","this","arguments","getUserProfile","_ref2","_callee2","user","_context2","t0","error","_x3","getAllUserPlaylists","_ref3","_callee3","playlists","more","pageUrl","_context3","push","toConsumableArray","items","_x4","getAllTracksForManyPlaylists","_ref4","_callee4","promises","playlistNames","_iterator","_step","playlist","promiseResults","noNulls","playlistNameToTracksMap","i","_context4","_createForOfIteratorHelper","s","n","done","value","getAllTracksForSinglePlaylist","id","name","err","e","f","all","every","item","length","_x5","_x6","_ref5","_callee5","tracks","_context5","_x7","_x8","AllTracks","props","_this","classCallCheck","_super","call","state","filteredTracks","searchText","loading","_this2","setState","access_token","values","applyFilter","callback","_this$state","_i","_Object$entries","entries","slicedToArray","playlistName","AllTracks_createForOfIteratorHelper","track","artists","album","trackNameMatch","toLowerCase","includes","joinedArtists","map","el","join","artistMatch","albumMatch","key","trackName","artist","slice","react_default","createElement","className","reduce","acc","curr","prevState","sort","b","localeCompare","_this3","src","spinner","alt","numTracks","keys","onSubmit","preventDefault","placeholder","type","onChange","target","onClick","filterByKey","renderFilteredTracks","Component","Header","images","url","display_name","logout","Home","cookies","history","remove","components_Header","bind","src_components_AllTracks","withCookies","scopes","Landing","location","queryString","parse","hash","set","window","encodeURIComponent","App","es6","BrowserRouter","basename","process","Route","path","exact","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.bde4b4d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.8b9a5cd1.gif\";","export const sleep = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n","import { sleep } from \"../utilities/time\";\n\nconst MAX_PLAYLISTS_PER_REQUEST = 50;\n\nconst GET_USER_PROFILE_URL = \"https://api.spotify.com/v1/me\";\nconst GET_ALL_USER_PLAYLISTS_URL = `https://api.spotify.com/v1/me/playlists?&limit=${MAX_PLAYLISTS_PER_REQUEST}`;\nconst GET_PLAYLIST_TRACKS_URL = (playlistId) =>\n  `https://api.spotify.com/v1/playlists/${playlistId}/tracks`;\n\n/**\n * A generic request to the Spotify API; all fetches should use this\n * @param {string} spotifyURL\n * @param {string} accessToken\n */\nconst spotifyGetRequest = async (spotifyURL, accessToken) => {\n  const response = await fetch(spotifyURL, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n  if (response.status === 200) {\n    return response.json();\n  } else if (response.status === 429) {\n    const retryAfterSeconds = response.headers.get(\"retry-after\");\n    if (!retryAfterSeconds) {\n      throw new Error(`Rate limited but could not get retry-after value`);\n    }\n    if (retryAfterSeconds > 10) {\n      throw new Error(\n        `Rate limited with a long retry-after of ${retryAfterSeconds} seconds, not retrying`\n      );\n    }\n    console.log(`Rate limited, retrying in ${retryAfterSeconds} seconds`);\n    await sleep(retryAfterSeconds * 1000);\n    return await spotifyGetRequest(spotifyURL, accessToken);\n  } else {\n    throw new Error(`Recieved ${response.status} when fetching`);\n  }\n};\n\n/**\n * Gets the current user profile, or null if it fails\n * @param {string} accessToken\n */\nexport const getUserProfile = async (accessToken) => {\n  try {\n    const user = await spotifyGetRequest(GET_USER_PROFILE_URL, accessToken);\n    return user;\n  } catch (err) {\n    console.error(\"Error getting the current user profile\", err);\n    return null;\n  }\n};\n\n/**\n * Get all playlists for the current user, or null if it fails\n * @param {string} accessToken\n */\nexport const getAllUserPlaylists = async (accessToken) => {\n  try {\n    const playlists = [];\n    let more = true;\n    let pageUrl = GET_ALL_USER_PLAYLISTS_URL;\n\n    while (more) {\n      const response = await spotifyGetRequest(pageUrl, accessToken);\n      playlists.push(...response.items);\n      if (response.next) {\n        pageUrl = response.next;\n      } else {\n        more = false;\n      }\n\n      // Sleep a bit to try to avoid getting rate limited\n      await sleep(250);\n    }\n    return playlists;\n  } catch (err) {\n    console.error(\"Error getting all user playlists\", err);\n    return null;\n  }\n};\n\n/**\n * Get all the tracks for a given set of playlists. Returns a map from the playlist\n * name to the array of tracks. Returns null if any of the fetches fail.\n * @param {string} accessToken\n * @param {Spotify Playlist Array} playlists\n */\nexport const getAllTracksForManyPlaylists = async (accessToken, playlists) => {\n  // We'll use parallel arrays for these\n  const promises = [];\n  const playlistNames = [];\n  for (const playlist of playlists) {\n    promises.push(getAllTracksForSinglePlaylist(accessToken, playlist.id));\n    playlistNames.push(playlist.name);\n  }\n\n  const promiseResults = await Promise.all(promises);\n\n  // Since we're using parallel arrays we need to make sure they're in sync\n  const noNulls = promiseResults.every((item) => item !== null);\n  if (promiseResults.length !== playlistNames.length || !noNulls) {\n    console.error(\"Error fetching all tracks in all playlists\");\n    return null;\n  }\n\n  const playlistNameToTracksMap = {};\n  for (let i = 0; i < promiseResults.length; i++) {\n    playlistNameToTracksMap[playlistNames[i]] = promiseResults[i];\n  }\n\n  return playlistNameToTracksMap;\n};\n\n/**\n * Get all tracks in a given Spotify playlist. Returns null if it fails.\n * @param {string} accessToken\n * @param {string} playlistId\n */\nexport const getAllTracksForSinglePlaylist = async (\n  accessToken,\n  playlistId\n) => {\n  try {\n    const tracks = [];\n    let more = true;\n    let pageUrl = GET_PLAYLIST_TRACKS_URL(playlistId);\n\n    while (more) {\n      const response = await spotifyGetRequest(pageUrl, accessToken);\n      tracks.push(...response.items);\n      if (response.next) {\n        pageUrl = response.next;\n      } else {\n        more = false;\n      }\n    }\n    return tracks;\n  } catch (err) {\n    console.error(`Error getting tracks for playlist ${playlistId}`, err);\n    return null;\n  }\n};\n","import React, { Component } from \"react\";\nimport spinner from \"../assets/spinner.gif\";\nimport \"./AllTracks.css\";\nimport {\n  getAllTracksForManyPlaylists,\n  getAllUserPlaylists,\n} from \"../api/spotify\";\n\nclass AllTracks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playlists: [],\n      playlistNameToTracksMap: {},\n      filteredTracks: [],\n      searchText: \"\",\n      loading: false,\n      error: false,\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n\n    const playlists = await getAllUserPlaylists(this.props.access_token);\n\n    if (playlists === null) {\n      this.setState({ loading: false, error: true });\n      return;\n    } else if (playlists.length === 0) {\n      // TODO: handle when user has 0 playlists\n      console.error(\"Did not find any playlists.\");\n      this.setState({ loading: false, error: true });\n      return;\n    }\n\n    const playlistNameToTracksMap = await getAllTracksForManyPlaylists(\n      this.props.access_token,\n      playlists\n    );\n\n    if (playlistNameToTracksMap === null) {\n      this.setState({ loading: false, error: true });\n      return;\n    } else if (\n      Object.values(playlistNameToTracksMap).every((item) => item.length === 0)\n    ) {\n      // TODO: handle an edge case where user has 0 tracks in any playlists\n      console.error(\"Did not find any tracks in any playlists.\");\n      this.setState({ loading: false, error: true });\n    }\n\n    this.setState({ playlistNameToTracksMap }, () => {\n      this.applyFilter(() => this.setState({ loading: false }));\n    });\n  }\n\n  applyFilter(callback) {\n    const { playlistNameToTracksMap, searchText } = this.state;\n\n    let filteredTracks = [];\n\n    for (const [playlistName, tracks] of Object.entries(\n      playlistNameToTracksMap\n    )) {\n      for (const trackObj of tracks) {\n        const track = trackObj.track;\n\n        if (!track) {\n          console.error(`Track does not have expected data`);\n          continue;\n        }\n\n        // We'll do some validation for expected properties on the data\n        if (!track.name || !track.artists || !track.album || !track.id) {\n          console.error(`Track does not have expected data`);\n          continue;\n        }\n\n        const trackNameMatch = track.name\n          .toLowerCase()\n          .includes(searchText.toLowerCase());\n\n        const joinedArtists = track.artists.map((el) => el.name).join(\", \");\n        const artistMatch = joinedArtists\n          .toLowerCase()\n          .includes(searchText.toLowerCase());\n\n        const albumMatch = track.album.name\n          .toLowerCase()\n          .includes(searchText.toLowerCase());\n\n        if (trackNameMatch || artistMatch || albumMatch) {\n          filteredTracks.push({\n            key: `${playlistName}-${track.id}`,\n            playlistName: playlistName,\n            trackName: track.name,\n            artist: joinedArtists,\n            album: track.album.name,\n          });\n        }\n      }\n    }\n\n    this.setState({ filteredTracks }, callback);\n  }\n\n  renderFilteredTracks() {\n    let { filteredTracks } = this.state;\n    const maxSize = 500;\n\n    if (!filteredTracks) return null;\n\n    return filteredTracks.slice(0, maxSize).map((track) => {\n      return (\n        <tr key={track.key} className=\"TrackList_Row\">\n          <td className=\"Tracklist_Playlist\">{track.playlistName}</td>\n          <td className=\"Tracklist_Title\">{track.trackName}</td>\n          <td className=\"Tracklist_Artist_Album Tracklist_Artist\">\n            {track.artist}\n          </td>\n          <td className=\"Tracklist_Artist_Album Tracklist_Album\">\n            {track.album}\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  numTracks() {\n    const { playlistNameToTracksMap } = this.state;\n    if (!playlistNameToTracksMap) return 0;\n\n    return Object.values(playlistNameToTracksMap)\n      .map((item) => item.length)\n      .reduce((acc, curr) => acc + curr, 0);\n  }\n\n  filterByKey(key) {\n    this.setState((prevState) => {\n      return {\n        filteredTracks: prevState.filteredTracks.sort((a, b) => {\n          return a[key].toLowerCase().localeCompare(b[key].toLowerCase());\n        }),\n      };\n    });\n  }\n\n  render() {\n    return this.state.error ? (\n      <p>ERROR</p>\n    ) : this.state.loading ? (\n      <div className=\"centered\">\n        <img src={spinner} className=\"Spinner\" alt=\"loading...\" />\n      </div>\n    ) : (\n      <div className=\"AllTracks\">\n        <p className=\"PlaylistHeader_Name\">Spotify Playlist Analyzer</p>\n        <p className=\"PlaylistSubHeader_Name\">\n          Search all tracks on all your playlists at once.\n        </p>\n        <p className=\"PlaylistHeader_Subtitle\">\n          <span className=\"Bold\">{this.numTracks()}</span> total tracks •{\" \"}\n          <span className=\"Bold\">{this.state.filteredTracks.length}</span>{\" \"}\n          filtered tracks •{\" \"}\n          <span className=\"Bold\">\n            {Object.keys(this.state.playlistNameToTracksMap).length}\n          </span>{\" \"}\n          total playlists\n        </p>\n        <p className=\"PlaylistHeader_Subtitle\"></p>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.applyFilter();\n          }}\n        >\n          <input\n            className=\"SearchBar\"\n            placeholder=\"Search a track name, artist, or album...\"\n            type=\"text\"\n            onChange={(e) => this.setState({ searchText: e.target.value })}\n            value={this.state.searchText}\n          />\n        </form>\n        <div>\n          <table className=\"AllTracks_TrackList\">\n            <tbody>\n              <tr>\n                <th\n                  className=\"TrackList_HeaderCell\"\n                  onClick={() => this.filterByKey(\"playlistName\")}\n                >\n                  PLAYLIST\n                </th>\n                <th\n                  className=\"TrackList_HeaderCell\"\n                  onClick={() => this.filterByKey(\"trackName\")}\n                >\n                  TITLE\n                </th>\n                <th\n                  className=\"TrackList_HeaderCell TrackList_HeaderCell_Artist\"\n                  onClick={() => this.filterByKey(\"artist\")}\n                >\n                  ARTIST\n                </th>\n                <th\n                  className=\"TrackList_HeaderCell TrackList_HeaderCell_Album\"\n                  onClick={() => this.filterByKey(\"album\")}\n                >\n                  ALBUM\n                </th>\n              </tr>\n              {this.renderFilteredTracks()}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AllTracks;\n","import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header(props) {\n  const { user } = props;\n\n  return (\n    <div className=\"Header\">\n      {user && user.images ? (\n        <img\n          className=\"Header_Img\"\n          src={user.images[0].url || \"\"}\n          alt=\"user img\"\n        />\n      ) : (\n        <span />\n      )}\n      <p className=\"Header_Name\">{user.display_name}</p>\n      <button\n        type=\"button\"\n        className=\"Header_Logout\"\n        onClick={() => props.logout()}\n      >\n        Log Out\n      </button>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { instanceOf } from \"prop-types\";\nimport { withCookies, Cookies } from \"react-cookie\";\nimport AllTracks from \"../../components/AllTracks\";\nimport Header from \"../../components/Header.jsx\";\nimport { getUserProfile } from \"../../api/spotify\";\nimport \"./Home.css\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      access_token: this.props.cookies.get(\"access_token\") || \"\",\n      user: {\n        display_name: \"\",\n        images: [\n          {\n            url: \"\",\n          },\n        ],\n      },\n    };\n  }\n\n  async componentDidMount() {\n    if (!this.state.access_token) {\n      this.props.history.push(\"/\");\n    } else {\n      const user = await getUserProfile(this.state.access_token);\n      if (user) {\n        this.setState({ user });\n      } else {\n        await this.logout();\n      }\n    }\n  }\n\n  /**\n   * 1. Removes the access token cookie\n   * 2. Sets the access token in the state to ''\n   * 3. Navigates to the homepage\n   */\n  async logout() {\n    await this.props.cookies.remove(\"access_token\");\n    this.setState({ access_token: \"\" }, () => {\n      this.props.history.push(\"/\");\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <Header user={this.state.user} logout={this.logout.bind(this)}></Header>\n        <AllTracks access_token={this.state.access_token} />\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  cookies: instanceOf(Cookies).isRequired,\n};\n\nexport default withCookies(Home);\n","/* Constants used throughout the application */\n\nexport const clientID = \"bc800faa1cb3438da94f230ba04a1e1b\";\n\nexport const clientSecret = \"36d268ad41f24665a02dabe2d5ac8e5a\";\n\nexport const scopes = \"user-read-private user-read-email playlist-read-private\";\n\nexport const redirect_uri =\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\n    ? \"http://localhost:3000/\"\n    : \"https://jacobfisher18.github.io/playlist_analyzer/\";\n","import React, { Component } from \"react\";\nimport queryString from \"query-string\";\nimport { instanceOf } from \"prop-types\";\nimport { withCookies, Cookies } from \"react-cookie\";\nimport { authWithSpotify } from \"../../api/auth\";\nimport \"./Landing.css\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    const { location } = this.props;\n\n    const access_token = queryString.parse(location.hash).access_token || \"\";\n\n    if (access_token) {\n      this.props.cookies.set(\"access_token\", access_token);\n      this.props.history.push(\"/home\");\n    } else if (this.props.cookies.get(\"access_token\")) {\n      this.props.history.push(\"/home\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Landing\">\n        <h3 className=\"Landing_Title_Spotify\">Spotify</h3>\n        <h1 className=\"Landing_Title_Playlist_Analyzer\">PLAYLIST ANALYZER</h1>\n        <h5 className=\"Landing_Title_Web_App\">\n          A web app by <span className=\"Landing_Title_Name\">Jacob Fisher</span>\n        </h5>\n        <button\n          className=\"Landing_Button_Login\"\n          onClick={() => authWithSpotify()}\n        >\n          LOGIN\n        </button>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  cookies: instanceOf(Cookies).isRequired,\n};\n\nexport default withCookies(Landing);\n","import { clientID, scopes, redirect_uri } from \"../utilities/constants\";\n\nexport const authWithSpotify = () => {\n  window.location =\n    \"https://accounts.spotify.com/authorize\" +\n    \"?response_type=token\" +\n    \"&client_id=\" +\n    clientID +\n    (scopes ? \"&scope=\" + encodeURIComponent(scopes) : \"\") +\n    \"&redirect_uri=\" +\n    encodeURIComponent(redirect_uri) +\n    \"&show_dialog=true\";\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { CookiesProvider } from \"react-cookie\";\nimport Home from \"./pages/Home/Home.jsx\";\nimport Landing from \"./pages/Landing/Landing.jsx\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <CookiesProvider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div>\n            <Route path=\"/\" exact component={Landing} />\n            <Route path=\"/home\" component={Home} />\n          </div>\n        </Router>\n      </CookiesProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}