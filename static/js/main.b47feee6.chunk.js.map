{"version":3,"sources":["assets/spinner.gif","components/Sidebar.jsx","utilities/apiRequests.js","components/AllTracks.jsx","components/Header.jsx","components/PlaylistHeader.jsx","components/TrackList.jsx","components/Overview.jsx","components/FeatureBar.jsx","components/Stats.jsx","utilities/constants.js","components/PlaylistMenu.jsx","pages/Home/Home.jsx","pages/Landing/Landing.jsx","utilities/auth.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Sidebar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activePlaylist","_this2","playlists","map","react_default","a","createElement","className","currentPlaylist","name","activePage","key","onClick","setActivePage","setCurrentPlaylist","_this3","renderPlaylists","Component","spotifyGetRequest","spotifyURL","access_token","callback","fetch","method","headers","Accept","Content-Type","Authorization","concat","then","response","json","myJson","AllTracks","tracks","filteredTracks","searchText","loading","error","setState","getPlaylists","getAllTracks","applyFilter","promises","i","length","push","getTracks","id","Promise","all","res","rej","recursivelyGetPlaylists","url","_this4","resolve","reject","items","next","playlist_id","playlist_name","_this5","recursivelyGetTracks","result","_this6","prevState","_this$state","j","trackNameMatch","track","toLowerCase","includes","artistMatch","artists","el","join","albumMatch","album","trackName","artist","slice","reduce","accumulator","currentValue","sort","b","localeCompare","_this7","src","spinner","alt","numTracks","onSubmit","e","preventDefault","placeholder","type","onChange","target","value","filterByKey","renderFilteredTracks","Header","user","logout","display_name","images","style","clear","PlaylistHeader","playlist","total","TrackList","item","popularity","renderTracks","Overview","owner","public","collaborative","FeatureBar","multiplier","outerWidthStyle","width","innerWidthStyle","data-tip","dist_default","effect","features","description","Stats","feature","arr","trackStats","avg","Number","Math","round","react_tooltip_lite_dist_default","content","padding","components_FeatureBar","getAvg","renderAverages","scopes","playlist_menu_tabs","PlaylistMenu","_this$props","activeTab","selectTab","tab","renderTabs","Home","cookies","get","currentPlaylistTracks","currentPlaylistTrackStats","getUserProfile","history","remove","getTrackStats","track_ids","subarray","toString","audio_features","components_Overview","src_components_TrackList","src_components_Stats","components_Header","bind","src_components_Sidebar","components_PlaylistHeader","src_components_PlaylistMenu","renderActiveTab","src_components_AllTracks","withCookies","Landing","location","queryString","parse","hash","set","window","encodeURIComponent","App","es6","BrowserRouter","basename","process","Route","path","exact","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b47feee6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.8b9a5cd1.gif\";","import React, { Component } from 'react';\nimport './Sidebar.css';\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activePlaylist: '',\n    };\n  }\n\n  renderPlaylists() {\n    if (this.props.playlists) {return this.props.playlists.map(p => <li\n      className={\n        (this.props.currentPlaylist.name === p.name && this.props.activePage === 'PLAYLIST')\n          ? 'Sidebar_Playlist_Selected'\n          : 'Sidebar_Playlist_Unselected'}\n      key={p.name}\n      onClick={() => {\n        this.props.setActivePage('PLAYLIST')\n        this.props.setCurrentPlaylist(p)\n      }\n      }>\n      {p.name}\n    </li>);}\n  }\n\n  render() {\n    return (\n      <div className=\"Sidebar\">\n        <h4 className=\"Sidebar_Title_Playlists\">LIBRARY</h4>\n        <li\n          className={\n            (this.props.activePage === 'ALL_TRACKS')\n              ? 'Sidebar_Playlist_Selected'\n              : 'Sidebar_Playlist_Unselected'}\n          onClick={() => { this.props.setActivePage('ALL_TRACKS') }}>\n          All Tracks\n        </li>\n        <h4 className=\"Sidebar_Title_Playlists\">PLAYLISTS</h4>\n        {this.renderPlaylists()}\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","export const spotifyGetRequest = (spotifyURL, access_token, callback) => {\n  fetch(spotifyURL, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${access_token}`,\n    },\n  }).then(response => response.json()).then((myJson) => {\n    callback(myJson);\n  });\n};\n","import React, { Component } from 'react';\nimport { spotifyGetRequest } from '../utilities/apiRequests'\nimport spinner from '../assets/spinner.gif'\nimport './AllTracks.css';\n\nclass AllTracks extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playlists: [],\n      tracks: [],\n      filteredTracks: [],\n      searchText: '',\n      loading: false,\n      error: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true })\n    this.getPlaylists().then(() => {\n      this.getAllTracks().then(() => {\n        this.applyFilter(() => this.setState({ loading: false }));\n      }, () => this.setState({ error: true }))\n    }, () => this.setState({ error: true }))\n  }\n\n  getAllTracks() {\n    const promises = [];\n    for (let i = 0; i < this.state.playlists.length; i++) {\n      promises.push(this.getTracks(this.state.playlists[i].id, this.state.playlists[i].name))\n    }\n\n    return Promise.all(promises);\n  }\n\n  // calls recursivelyGetPlaylists to get all the user's playlists\n  getPlaylists() {\n    this.setState({ playlists: [] })\n    const limit = 50;\n    const spotifyURL = `https://api.spotify.com/v1/me/playlists?&limit=${limit}`;\n\n    return new Promise((res, rej) => {\n      this.recursivelyGetPlaylists(spotifyURL).then(() => {\n        res();\n      }, () => {\n        rej();\n      })\n    })\n  }\n\n  // recursively gets user's playlists 50 at a time from spotify api\n  recursivelyGetPlaylists(url) {\n    return new Promise((resolve, reject) => {\n      spotifyGetRequest(url, this.props.access_token, (myJson) => {\n        this.setState({\n          playlists: this.state.playlists.concat(myJson.items)\n        });\n        if (myJson.next) {\n          this.recursivelyGetPlaylists(myJson.next).then(() => {\n            resolve();\n          }, () => {\n            reject();\n          });\n        } else {\n          if (this.state.playlists.length === 0) {\n            reject();\n          } else {\n            resolve();\n          }\n        }\n      })\n    })\n  }\n\n  /* Get all the tracks for a given playlist*/\n  getTracks(playlist_id, playlist_name) {\n    const spotifyURL = `https://api.spotify.com/v1/playlists/${playlist_id}/tracks`;\n\n    return new Promise((res, rej) => {\n      this.recursivelyGetTracks([], spotifyURL, playlist_id, playlist_name).then(() => {\n        res();\n      }, () => {\n        rej();\n      })\n    })\n  }\n\n  /* Recursive function for getting playlist tracks one page at a time */\n  recursivelyGetTracks(result, url, playlist_id, playlist_name) {\n    return new Promise((resolve, reject) => {\n      spotifyGetRequest(url, this.props.access_token, (myJson) => {\n        result = result.concat(myJson.items)\n        if (myJson.next) {\n          this.recursivelyGetTracks(result, myJson.next, playlist_id, playlist_name).then(() => {\n            resolve();\n          }, () => {\n            reject();\n          });\n        } else {\n          if (result.length === 0) reject();\n          else {\n            this.setState(prevState => ({\n              tracks: prevState.tracks.concat([{\n                playlist_name,\n                playlist_id,\n                items: result,\n              }])\n            }), () => resolve());\n          }\n        }\n      });\n    })\n  }\n\n  applyFilter(callback) {\n    const { tracks, searchText } = this.state;\n\n    let filteredTracks = [];\n\n    for (let i = 0; i < tracks.length; i++) {\n      for (let j = 0; j < tracks[i].items.length; j++) {\n        const trackNameMatch =\n          (tracks[i].items[j].track.name).toLowerCase()\n            .includes(searchText.toLowerCase())\n        \n        const artistMatch =\n          tracks[i].items[j].track.artists.map(el => el.name).join(' ').toLowerCase()\n            .includes(searchText.toLowerCase())\n        \n        const albumMatch =\n          (tracks[i].items[j].track.album.name).toLowerCase()\n            .includes(searchText.toLowerCase())\n\n        if (trackNameMatch || artistMatch || albumMatch) {\n          filteredTracks.push({\n            key: `${tracks[i].playlist_name}-${tracks[i].items[j].track.id}`,\n            playlist_name: tracks[i].playlist_name,\n            trackName: tracks[i].items[j].track.name,\n            artist: tracks[i].items[j].track.artists.map(el => el.name).join(', '),\n            album: tracks[i].items[j].track.album.name,\n          })\n        }\n      }\n    }\n\n    this.setState({ filteredTracks }, callback);\n  }\n\n  renderFilteredTracks() {\n    let { filteredTracks } = this.state\n    const maxSize = 500;\n\n    if (!filteredTracks) return null;\n\n    return filteredTracks.slice(0, maxSize).map((track) => {\n      return (\n        <tr key={track.key} className=\"TrackList_Row\">\n          <td className=\"Tracklist_Playlist\">{track.playlist_name}</td>\n          <td className=\"Tracklist_Title\">{track.trackName}</td>\n          <td className=\"Tracklist_Artist_Album\">{track.artist}</td>\n          <td className=\"Tracklist_Artist_Album\">{track.album}</td>\n        </tr>\n      )\n    })\n  }\n\n  numTracks() {\n    if (!(this.state.tracks) || this.state.tracks.length === 0) return 0;\n\n    return this.state.tracks.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.items.length;\n    }, 0)\n  }\n\n  filterByKey(key) {\n    this.setState((prevState) => {\n      return {\n        filteredTracks: prevState.filteredTracks.sort((a, b) => {\n          return a[key].toLowerCase().localeCompare(b[key].toLowerCase());\n        })\n      }\n    });\n  }\n\n  render() {\n    return (\n      this.state.error ? <p>ERROR</p> :\n        this.state.loading ? <div className=\"centered\"><img src={spinner} className=\"Spinner\" alt=\"loading...\" /></div> :\n      <div className=\"AllTracks\">\n          <p className=\"PlaylistHeader_Name\">All Tracks</p>\n            <p className=\"PlaylistHeader_Subtitle\">\n              <span className=\"Bold\">{this.numTracks()}</span> total tracks • <span className=\"Bold\">{this.state.filteredTracks.length}</span> filtered tracks\n            </p>\n            <p className=\"PlaylistHeader_Subtitle\"></p>\n          <form onSubmit={(e) => { e.preventDefault(); this.applyFilter() }}>\n          <input\n            className=\"SearchBar\"\n            placeholder=\"Search a track name, artist, or album...\"\n            type=\"text\"\n            onChange={(e) => this.setState({ searchText: e.target.value })}\n            value={this.state.searchText}\n            />\n        </form>\n        <div>\n          <table className=\"AllTracks_TrackList\">\n            <tbody>\n              <tr>\n                <th\n                  className=\"TrackList_HeaderCell\"\n                  onClick={() => this.filterByKey('playlist_name')}\n                >PLAYLIST</th>\n                <th\n                  className=\"TrackList_HeaderCell\"\n                  onClick={() => this.filterByKey('trackName')}\n                >TITLE</th>\n                <th\n                  className=\"TrackList_HeaderCell\"\n                  onClick={() => this.filterByKey('artist')}\n                >ARTIST</th>\n                <th\n                  className=\"TrackList_HeaderCell\"\n                  onClick={() => this.filterByKey('album')}\n                >ALBUM</th>\n              </tr>\n                {this.renderFilteredTracks()}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AllTracks;\n","import React from 'react';\nimport './Header.css';\n\nfunction Header(props) {\n  const { user } = props;\n\n  return (\n    <div className=\"Header\">\n      <button type=\"button\" className=\"Header_Logout\" onClick={() => props.logout()}>logout</button>\n      <p className=\"Header_Name\">{user.display_name}</p>\n      {user && user.images ? (\n        <img className=\"Header_Img\" src={user.images[0].url || ''} alt=\"user img\" />\n      ) : (\n        <span />\n      )}\n      <div style={{ clear: 'both' }} />\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './PlaylistHeader.css';\n\nfunction PlaylistHeader(props) {\n  const { playlist } = props;\n\n  return (\n    <div className=\"PlaylistHeader\">\n      <img className=\"PlaylistHeader_Image\" src={playlist.images && playlist.images[0] ? playlist.images[0].url : ''} alt=\"playlist img\" />\n      <div className=\"PlaylistHeader_Metadata\">\n        <h3 className=\"PlaylistHeader_Title\">PLAYLIST</h3>\n        <h1 className=\"PlaylistHeader_Name\">{playlist.name || ''}</h1>\n        <h5 className=\"PlaylistHeader_TrackCount\">\n          {`${playlist.tracks.total || 0} tracks`}\n        </h5>\n      </div>\n    </div>\n  );\n}\n\nexport default PlaylistHeader;\n","import React, { Component } from 'react';\nimport './TrackList.css';\n\nclass TrackList extends Component {\n  renderTracks() {\n    const { items } = this.props;\n\n    if (items) {\n      return items.map(item => (\n        <tr\n          key={item.track.name}\n        >\n          <td className=\"Tracklist_Title\">{item.track.name}</td>\n          <td className=\"Tracklist_Artist_Album\">\n            {item.track.artists.map(el => el.name).join(', ')}\n          </td>\n          <td className=\"Tracklist_Artist_Album\">{item.track.album.name}</td>\n          <td className=\"Tracklist_Popularity\">{item.track.popularity}</td>\n        </tr>\n      ));\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <div className=\"TrackList\">\n        <table>\n          <tbody>\n            <tr>\n              <th>TITLE</th>\n              <th>ARTIST</th>\n              <th>ALBUM</th>\n              <th>POPULARITY</th>\n            </tr>\n            {this.renderTracks()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default TrackList;\n","import React from 'react';\nimport './Overview.css';\n\nfunction Overview(props) {\n  const { playlist } = props;\n\n  return (\n    <div className=\"Overview\">\n      <p>\n        Owner:\n        {' '}\n        {playlist.owner.display_name}\n      </p>\n      <p>\n        {playlist.public ? 'PUBLIC' : 'PRIVATE'}\n        {' | '}\n        {playlist.collaborative ? 'COLLABORATIVE' : 'NOT COLLABORATIVE'}\n      </p>\n      <p>\n        {playlist.tracks.total}\n        {' '}\n        tracks\n      </p>\n    </div>\n  );\n}\n\nexport default Overview;\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport './FeatureBar.css';\n\nfunction FeatureBar(props) {\n  const maxidth = 400;\n  const { value } = props;\n\n  let multiplier = value || 0;\n  if (multiplier < 0 || multiplier > 1) {\n    multiplier = 0;\n  }\n\n  const outerWidthStyle = { width: `${maxidth}px` };\n  const innerWidthStyle = { width: `${multiplier * maxidth}px` };\n\n  return (\n    <div className=\"FeatureBar_Outer\" style={outerWidthStyle}>\n      <div className=\"FeatureBar_Inner\" style={innerWidthStyle} data-tip={value} />\n      <ReactTooltip effect=\"solid\" />\n    </div>\n  );\n}\n\nexport default FeatureBar;\n","import React, { Component } from 'react';\nimport FeatureBar from './FeatureBar.jsx';\nimport Tooltip from 'react-tooltip-lite';\nimport './Stats.css';\n\n// tbd: duration_ms, loudness, tempo, mode, etc.\nconst features = [\n  {\n    name: 'acousticness',\n    description: 'A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.',\n  },\n  {\n    name: 'danceability',\n    description: 'Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.',\n  },\n  {\n    name: 'energy',\n    description: 'Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy.',\n  },\n  {\n    name: 'instrumentalness',\n    description: 'Predicts whether a track contains no vocals. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks.',\n  },\n  {\n    name: 'liveness',\n    description: 'Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.',\n  },\n  {\n    name: 'speechiness',\n    description: 'Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value.',\n  },\n  {\n    name: 'valence',\n    description: 'A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).',\n  },\n]\n\nclass Stats extends Component {\n  \n  getAvg(feature) {\n    const arr = this.props.trackStats || [];\n\n    const avg = arr.reduce((accumulator, track) => accumulator + Number(track[feature]), 0) / arr.length;\n\n    return Math.round(avg * 100) / 100;\n  }\n\n  renderAverages() {\n    return features.map(feature => (\n      <tr\n        className=\"Stats_TableRow\"\n        key={feature.name}\n      >\n        <td className=\"Stats_FeatureName\">\n          <Tooltip content={feature.description} padding=\"20px\">\n            {feature.name}\n          </Tooltip>\n        </td>\n        <td>\n          <FeatureBar value={this.getAvg(feature.name)}/>\n        </td >\n        <td>{this.getAvg(feature.name)}</td>\n      </tr>\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"Stats\">\n        <h1 className=\"Stats_Averages_Title\">Averages</h1>\n        <table>\n          <tbody>\n            {this.renderAverages()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Stats;\n","/* Constants used throughout the application */\n\nexport const clientID = 'bc800faa1cb3438da94f230ba04a1e1b';\n\nexport const clientSecret = '36d268ad41f24665a02dabe2d5ac8e5a';\n\nexport const scopes = 'user-read-private user-read-email playlist-read-private';\n\nexport const redirect_uri =\n  (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ?\n    'http://localhost:3000/' :\n    'https://jacobfisher18.github.io/playlist_analyzer/'\n\nexport const playlist_menu_tabs = ['OVERVIEW', 'TRACKS', 'STATS'];\n","import React, { Component } from 'react';\nimport { playlist_menu_tabs } from '../utilities/constants';\nimport './PlaylistMenu.css';\n\nclass PlaylistMenu extends Component {\n  renderTabs() {\n    const { activeTab, selectTab } = this.props;\n\n    return playlist_menu_tabs.map(tab => (\n      <li\n        className={activeTab === tab ? 'PlaylistMenu_Active_Tab' : ''}\n        onClick={() => selectTab(tab)}\n        key={tab}\n      >\n        {tab}\n      </li>\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"PlaylistMenu\">\n        <ul>\n          {this.renderTabs()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default PlaylistMenu;\n","import React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport Sidebar from '../../components/Sidebar.jsx';\nimport AllTracks from '../../components/AllTracks'\nimport Header from '../../components/Header.jsx';\nimport PlaylistHeader from '../../components/PlaylistHeader.jsx';\nimport TrackList from '../../components/TrackList.jsx';\nimport Overview from '../../components/Overview.jsx';\nimport Stats from '../../components/Stats.jsx';\nimport PlaylistMenu from '../../components/PlaylistMenu.jsx';\nimport { spotifyGetRequest } from '../../utilities/apiRequests.js';\nimport { playlist_menu_tabs } from '../../utilities/constants.js';\nimport './Home.css';\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      access_token: this.props.cookies.get('access_token') || '',\n      user: {\n        display_name: '',\n        images: [\n          {\n            url: '',\n          }\n        ],\n      },\n      playlists: [],\n      currentPlaylist: {\n        name: '',\n        tracks: {\n          total: 0,\n        },\n        images: [\n          {\n            url: '',\n          }\n        ]\n      },\n      currentPlaylistTracks: [],\n      currentPlaylistTrackStats: [],\n      activeTab: playlist_menu_tabs[0],\n      activePage: 'ALL_TRACKS',\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.access_token) {\n      this.props.history.push(\"/\")\n    } else {\n      this.getPlaylists();\n      this.getUserProfile();\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.state.access_token) {\n      this.props.history.push(\"/\")\n    }\n  }\n\n  logout() {\n    // this.props.cookies.set('access_token', '');\n    this.props.cookies.remove('access_token');\n    this.setState({ access_token: '' });\n  }\n\n  getPlaylists() {\n    const limit = 50;\n    const spotifyURL = `https://api.spotify.com/v1/me/playlists?&limit=${limit}`;\n\n    spotifyGetRequest(spotifyURL, this.state.access_token, (myJson) => {\n      this.setState({ playlists: myJson.items });\n      this.setCurrentPlaylist(myJson.items ? myJson.items[0] : []);\n    });\n  }\n\n  getUserProfile() {\n    const spotifyURL = 'https://api.spotify.com/v1/me';\n\n    spotifyGetRequest(spotifyURL, this.state.access_token, (myJson) => {\n      this.setState({ user: myJson });\n    });\n  }\n\n  setCurrentPlaylist(currentPlaylist) {\n    this.setState({ currentPlaylist });\n    this.getTracks(currentPlaylist.id);\n  }\n\n  setActivePage(activePage) {\n    this.setState({ activePage });\n  }\n\n  /* Get all the tracks for a given playlist*/\n  /* Also gets the stats for all the tracks upon completion */\n  getTracks(playlist_id) {\n    this.setState({ currentPlaylistTracks: [] });\n\n    if (playlist_id) {\n      const spotifyURL = `https://api.spotify.com/v1/playlists/${playlist_id}/tracks`;\n      this.recursivelyGetTracks(spotifyURL);\n    }\n  }\n\n  /* Recursive function for getting playlist tracks one page at a time */\n  /* Calls getTrackStats upon completion */\n  recursivelyGetTracks(url) {\n    spotifyGetRequest(url, this.state.access_token, (myJson) => {\n      this.setState({\n        currentPlaylistTracks: this.state.currentPlaylistTracks.concat(myJson.items)\n      });\n      if (myJson.next) {\n        this.recursivelyGetTracks(myJson.next);\n      } else {\n        this.getTrackStats();\n      }\n    });\n  }\n\n  /* Get audio analysis for all the tracks in the current playlist */\n  getTrackStats() {\n    this.setState({ currentPlaylistTrackStats: [] });\n\n    const track_ids = this.state.currentPlaylistTracks.map(item => {\n      return item.track.id;\n    })\n\n    // can only request 100 at a time from the Spotify API\n    for (let i = 0; i < track_ids.length; i += 100) {\n      let subarray = track_ids.slice(i, i + 100);\n      \n      let spotifyURL = `https://api.spotify.com/v1/audio-features/?ids=${subarray.toString()}`;\n\n      spotifyGetRequest(spotifyURL, this.state.access_token, (myJson) => {\n        this.setState({\n          currentPlaylistTrackStats: this.state.currentPlaylistTrackStats.concat(myJson.audio_features)\n        });\n      });\n    }\n  }\n\n  renderActiveTab() {\n    if (this.state.activeTab === 'OVERVIEW') {\n      return <Overview playlist={this.state.currentPlaylist} />\n    } else if (this.state.activeTab === 'TRACKS') {\n      return <TrackList items={this.state.currentPlaylistTracks} />\n    } else if (this.state.activeTab === 'STATS') {\n      return <Stats trackStats={this.state.currentPlaylistTrackStats} />\n    }\n  }\n\n  selectTab(tab) {\n    this.setState({ activeTab: tab });\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <Header user={this.state.user} logout={this.logout.bind(this)}></Header>\n        <Sidebar\n          currentPlaylist={this.state.currentPlaylist}\n          playlists={this.state.playlists}\n          setCurrentPlaylist={this.setCurrentPlaylist.bind(this)}\n          setActivePage={this.setActivePage.bind(this)}\n          activePage={this.state.activePage}\n        />\n        <div className=\"Home_Main_Content\">\n          {(() => {\n            switch (this.state.activePage) {\n              case 'PLAYLIST':\n                return (\n                  this.state.currentPlaylist.name ? (\n                    <div>\n                      <PlaylistHeader playlist={this.state.currentPlaylist} access_token={this.state.access_token}></PlaylistHeader>\n                      <PlaylistMenu activeTab={this.state.activeTab} selectTab={this.selectTab.bind(this)}></PlaylistMenu>\n                      {this.renderActiveTab()}\n                    </div>\n                  ) : (\n                      <p></p>\n                    )\n                )\n              case 'ALL_TRACKS':\n                return (\n                  <AllTracks\n                    access_token={this.state.access_token}\n                  />\n                )\n              default:\n                return null;\n            }\n          })()}\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  cookies: instanceOf(Cookies).isRequired,\n};\n\nexport default withCookies(Home);\n","import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { authWithSpotify } from '../../utilities/auth';\nimport './Landing.css';\n\nclass Landing extends Component {\n  componentDidMount() {\n    const { location } = this.props;\n\n    const access_token = queryString.parse(location.hash).access_token || '';\n\n    if (access_token) {\n      this.props.cookies.set('access_token', access_token);\n      this.props.history.push('/home');\n    } else if (this.props.cookies.get('access_token')) {\n      this.props.history.push('/home');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Landing\">\n        <h3 className=\"Landing_Title_Spotify\">Spotify</h3>\n        <h1 className=\"Landing_Title_Playlist_Analyzer\">PLAYLIST ANALYZER</h1>\n        <h5 className=\"Landing_Title_Web_App\">\n          A web app by\n          {' '}\n          <span className=\"Landing_Title_Name\">Jacob Fisher</span>\n        </h5>\n        <button className=\"Landing_Button_Login\" onClick={() => authWithSpotify()}>\n          LOGIN\n        </button>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  cookies: instanceOf(Cookies).isRequired,\n};\n\nexport default withCookies(Landing);\n","import { clientID, scopes, redirect_uri } from './constants';\n\nexport const authWithSpotify = () => {\n  window.location = 'https://accounts.spotify.com/authorize' +\n    '?response_type=token' +\n    '&client_id=' + clientID +\n    (scopes ? '&scope=' + encodeURIComponent(scopes) : '') +\n    '&redirect_uri=' + encodeURIComponent(redirect_uri) + \n    '&show_dialog=true'\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { CookiesProvider } from 'react-cookie';\nimport Home from './pages/Home/Home.jsx'\nimport Landing from './pages/Landing/Landing.jsx'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <CookiesProvider>\n        <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Route path='/' exact component={Landing} />\n          <Route path='/home' component={Home} />\n        </div>\n        </Router>\n      </CookiesProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}