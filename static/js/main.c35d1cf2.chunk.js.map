{"version":3,"sources":["utilities/time.js","api/spotify.ts","hooks/useTracks.ts","components/AllTracks.tsx","components/Header.tsx","pages/Home/Home.jsx","api/auth.ts","utilities/constants.js","pages/Landing/Landing.jsx","App.tsx","index.js"],"names":["sleep","ms","Promise","resolve","setTimeout","GET_ALL_USER_PLAYLISTS_URL","concat","GET_PLAYLIST_TRACKS_URL","playlistId","spotifyGetRequest","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","spotifyURL","accessToken","response","retryAfterHeader","retryAfterSeconds","wrap","_context","prev","next","fetch","method","headers","Accept","Content-Type","Authorization","sent","status","abrupt","json","get","Error","parseInt","console","log","stop","_x","_x2","apply","this","arguments","getUserProfile","_ref2","_callee2","user","_context2","t0","error","_x3","getAllUserPlaylists","_ref3","_callee3","playlists","more","pageUrl","_context3","push","toConsumableArray","items","_x4","getAllTracksForManyPlaylists","_ref4","_callee4","promises","playlistNames","_iterator","_step","playlist","promiseResults","noNulls","playlistNameToTracksMap","i","_context4","_createForOfIteratorHelper","s","n","done","value","getAllTracksForSinglePlaylist","id","name","err","e","f","all","every","item","length","_x5","_x6","_ref5","_callee5","tracks","_context5","_x7","_x8","AllTracks","props","_useState","useState","_useState2","slicedToArray","filteredTracks","setFilteredTracks","_useState3","_useState4","searchText","setSearchText","_useTracks","spotifyAccessToken","allTracks","setAllTracks","loading","setLoading","_useState5","_useState6","setError","useEffect","newAllTracks","_i","_Object$entries","playlistName","trackObj","track","values","entries","useTracks_createForOfIteratorHelper","artists","album","objectSpread","finish","init","useTracks","access_token","react_default","createElement","Center","Loader","variant","Container","p","Title","order","Space","h","onSubmit","preventDefault","AllTracks_createForOfIteratorHelper","trackNameMatch","toLowerCase","includes","artistMatch","map","el","join","albumMatch","applyFilter","TextInput","placeholder","onChange","event","currentTarget","Table","slice","key","Header","style","display","flexDirection","alignItems","justifyContent","images","Avatar","src","url","radius","w","Text","display_name","Button","onClick","logout","Home","_this","classCallCheck","_super","call","state","cookies","history","setState","_this2","remove","Fragment","components_Header","bind","components_AllTracks","Component","withCookies","SPOTIFY_AUTH_URL","encodeURIComponent","Landing","location","queryString","parse","hash","set","className","window","App","es6","MantineProvider","theme","colorScheme","withGlobalStyles","withNormalizeCSS","BrowserRouter","basename","process","Route","path","exact","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c35d1cf2.chunk.js","sourcesContent":["export const sleep = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n","import { sleep } from \"../utilities/time\";\n\nconst MAX_PLAYLISTS_PER_REQUEST = 50;\n\nconst GET_USER_PROFILE_URL = \"https://api.spotify.com/v1/me\";\nconst GET_ALL_USER_PLAYLISTS_URL = `https://api.spotify.com/v1/me/playlists?&limit=${MAX_PLAYLISTS_PER_REQUEST}`;\nconst GET_PLAYLIST_TRACKS_URL = (playlistId: string) =>\n  `https://api.spotify.com/v1/playlists/${playlistId}/tracks`;\n\n/**\n * A generic request to the Spotify API; all fetches should use this\n */\nconst spotifyGetRequest = async (\n  spotifyURL: string,\n  accessToken: string\n): Promise<any> => {\n  const response = await fetch(spotifyURL, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n  if (response.status === 200) {\n    return response.json();\n  } else if (response.status === 429) {\n    const retryAfterHeader = response.headers.get(\"retry-after\");\n    if (!retryAfterHeader) {\n      throw new Error(`Rate limited but could not get retry-after value`);\n    }\n    const retryAfterSeconds = parseInt(retryAfterHeader);\n    if (retryAfterSeconds > 10) {\n      throw new Error(\n        `Rate limited with a long retry-after of ${retryAfterSeconds} seconds, not retrying`\n      );\n    }\n    console.log(`Rate limited, retrying in ${retryAfterSeconds} seconds`);\n    await sleep(retryAfterSeconds * 1000);\n    return await spotifyGetRequest(spotifyURL, accessToken);\n  } else {\n    throw new Error(`Recieved ${response.status} when fetching`);\n  }\n};\n\n/**\n * Gets the current user profile, or null if it fails\n */\nexport const getUserProfile = async (accessToken: string) => {\n  try {\n    const user = await spotifyGetRequest(GET_USER_PROFILE_URL, accessToken);\n    return user;\n  } catch (err) {\n    console.error(\"Error getting the current user profile\", err);\n    return null;\n  }\n};\n\n/**\n * Get all playlists for the current user, or null if it fails\n */\nexport const getAllUserPlaylists = async (accessToken: string) => {\n  try {\n    const playlists = [];\n    let more = true;\n    let pageUrl = GET_ALL_USER_PLAYLISTS_URL;\n\n    while (more) {\n      const response = await spotifyGetRequest(pageUrl, accessToken);\n      playlists.push(...response.items);\n      if (response.next) {\n        pageUrl = response.next;\n      } else {\n        more = false;\n      }\n\n      // Sleep a bit to try to avoid getting rate limited\n      await sleep(250);\n    }\n    return playlists;\n  } catch (err) {\n    console.error(\"Error getting all user playlists\", err);\n    return null;\n  }\n};\n\n/**\n * Get all the tracks for a given set of playlists. Returns a map from the playlist\n * name to the array of tracks. Returns null if any of the fetches fail.\n */\nexport const getAllTracksForManyPlaylists = async (\n  accessToken: string,\n  playlists: Array<any>\n) => {\n  // We'll use parallel arrays for these\n  const promises = [];\n  const playlistNames = [];\n  for (const playlist of playlists) {\n    promises.push(getAllTracksForSinglePlaylist(accessToken, playlist.id));\n    playlistNames.push(playlist.name);\n  }\n\n  const promiseResults = await Promise.all(promises);\n\n  // Since we're using parallel arrays we need to make sure they're in sync\n  const noNulls = promiseResults.every((item) => item !== null);\n  if (promiseResults.length !== playlistNames.length || !noNulls) {\n    console.error(\"Error fetching all tracks in all playlists\");\n    return null;\n  }\n\n  const playlistNameToTracksMap: Record<string, any> = {};\n  for (let i = 0; i < promiseResults.length; i++) {\n    playlistNameToTracksMap[playlistNames[i]] = promiseResults[i];\n  }\n\n  return playlistNameToTracksMap;\n};\n\n/**\n * Get all tracks in a given Spotify playlist. Returns null if it fails.\n */\nexport const getAllTracksForSinglePlaylist = async (\n  accessToken: string,\n  playlistId: string\n) => {\n  try {\n    const tracks = [];\n    let more = true;\n    let pageUrl = GET_PLAYLIST_TRACKS_URL(playlistId);\n\n    while (more) {\n      const response = await spotifyGetRequest(pageUrl, accessToken);\n      tracks.push(...response.items);\n      if (response.next) {\n        pageUrl = response.next;\n      } else {\n        more = false;\n      }\n    }\n    return tracks;\n  } catch (err) {\n    console.error(`Error getting tracks for playlist ${playlistId}`, err);\n    return null;\n  }\n};\n","import { useEffect, useState } from \"react\";\nimport {\n  getAllTracksForManyPlaylists,\n  getAllUserPlaylists,\n} from \"../api/spotify\";\n\nexport interface Track {\n  id: string;\n  playlistName: string;\n  name: string;\n  artists: Array<{ name: string }>;\n  album: { name: string };\n}\n\nexport const useTracks = (spotifyAccessToken: string) => {\n  const [allTracks, setAllTracks] = useState<Array<Track>>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const init = async () => {\n      setLoading(true);\n\n      const playlists = await getAllUserPlaylists(spotifyAccessToken);\n\n      if (playlists === null) {\n        setLoading(false);\n        setError(true);\n        return;\n      }\n\n      if (!playlists.length) {\n        // TODO: handle when user has 0 playlists\n        console.error(\"Did not find any playlists.\");\n        setLoading(false);\n        setError(true);\n        return;\n      }\n\n      const playlistNameToTracksMap = await getAllTracksForManyPlaylists(\n        spotifyAccessToken,\n        playlists\n      );\n\n      if (playlistNameToTracksMap === null) {\n        setLoading(false);\n        setError(true);\n        return;\n      }\n\n      if (\n        Object.values(playlistNameToTracksMap).every(\n          (item) => item.length === 0\n        )\n      ) {\n        // TODO: handle an edge case where user has 0 tracks in any playlists\n        console.error(\"Did not find any tracks in any playlists.\");\n        setLoading(false);\n        setError(true);\n        return;\n      }\n\n      const newAllTracks: Array<Track> = [];\n      for (const [playlistName, tracks] of Object.entries(\n        playlistNameToTracksMap\n      )) {\n        for (const trackObj of tracks) {\n          const track = trackObj.track;\n\n          // We'll do some validation for expected properties on the data\n          // TODO: Push this up into client\n          if (!track.name || !track.artists || !track.album || !track.id) {\n            console.error(`Track does not have expected data`);\n            continue;\n          }\n          newAllTracks.push({ ...track, playlistName });\n        }\n      }\n\n      setAllTracks(newAllTracks);\n\n      // This was previously happening after the set state, not sure what's up here\n      //   applyFilter();\n      setLoading(false);\n    };\n\n    init();\n  }, []);\n\n  return {\n    allTracks,\n    loading,\n    error,\n  };\n};\n","import React, { useState } from \"react\";\nimport { Track, useTracks } from \"../hooks/useTracks\";\nimport {\n  Title,\n  TextInput,\n  Table,\n  Loader,\n  Center,\n  Container,\n  Space,\n} from \"@mantine/core\";\n\ninterface Props {\n  access_token: string;\n}\n\nconst AllTracks = (props: Props): JSX.Element => {\n  const [filteredTracks, setFilteredTracks] = useState<Array<Track>>([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const { allTracks, loading, error } = useTracks(props.access_token);\n\n  const applyFilter = () => {\n    let filteredTracks = [];\n\n    for (const track of allTracks) {\n      const trackNameMatch = track.name\n        .toLowerCase()\n        .includes(searchText.toLowerCase());\n\n      const artistMatch = track.artists\n        .map((el: any) => el.name)\n        .join()\n        .toLowerCase()\n        .includes(searchText.toLowerCase());\n\n      const albumMatch = track.album.name\n        .toLowerCase()\n        .includes(searchText.toLowerCase());\n\n      if (trackNameMatch || artistMatch || albumMatch) {\n        filteredTracks.push(track);\n      }\n    }\n\n    setFilteredTracks(filteredTracks);\n  };\n\n  const renderFilteredTracks = () => {\n    const maxSize = 500;\n\n    if (!filteredTracks) return null;\n\n    return filteredTracks.slice(0, maxSize).map((track) => {\n      return (\n        <tr key={`${track.playlistName}-${track.id}`}>\n          <td>{track.playlistName}</td>\n          <td>{track.name}</td>\n          <td>{track.artists.map((el: any) => el.name).join(\", \")}</td>\n          <td>{track.album.name}</td>\n        </tr>\n      );\n    });\n  };\n\n  if (error) {\n    return <p>ERROR</p>;\n  }\n\n  if (loading) {\n    return (\n      <Center>\n        <Loader variant=\"bars\" />\n      </Center>\n    );\n  }\n\n  return (\n    <Container p=\"sm\">\n      <Title order={1}>Spotify Search</Title>\n      <Space h=\"sm\" />\n      <Title order={5}>\n        {allTracks.length} total tracks • {filteredTracks.length} filtered\n        tracks\n      </Title>\n      <Space h=\"sm\" />\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          applyFilter();\n        }}\n      >\n        <TextInput\n          placeholder=\"Search a track name, artist, or album...\"\n          value={searchText}\n          onChange={(event) => setSearchText(event.currentTarget.value)}\n        />\n      </form>\n      <Space h=\"sm\" />\n      <div>\n        <Table>\n          <thead>\n            <tr>\n              <th>PLAYLIST</th>\n              <th>TITLE</th>\n              <th>ARTIST</th>\n              <th>ALBUM</th>\n            </tr>\n          </thead>\n          <tbody>{renderFilteredTracks()}</tbody>\n        </Table>\n      </div>\n    </Container>\n  );\n};\n\nexport default AllTracks;\n","import React from \"react\";\nimport { Avatar, Text, Button, Container, Space } from \"@mantine/core\";\n\nfunction Header(props: {\n  logout: Function;\n  user: { images: Array<{ url: string }>; display_name: string };\n}) {\n  const { user } = props;\n\n  return (\n    <Container\n      p=\"lg\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n      }}\n    >\n      {user && user.images ? (\n        <Avatar src={user.images[0].url || \"\"} radius=\"xl\" />\n      ) : (\n        <span />\n      )}\n      <Space w=\"md\" />\n      <Text>{user.display_name}</Text>\n      <Space w=\"md\" />\n      <Button onClick={() => props.logout()}>Log Out</Button>\n    </Container>\n  );\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { instanceOf } from \"prop-types\";\nimport { withCookies, Cookies } from \"react-cookie\";\nimport AllTracks from \"../../components/AllTracks\";\nimport Header from \"../../components/Header\";\nimport { getUserProfile } from \"../../api/spotify\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      access_token: this.props.cookies.get(\"access_token\") || \"\",\n      user: {\n        display_name: \"\",\n        images: [\n          {\n            url: \"\",\n          },\n        ],\n      },\n    };\n  }\n\n  async componentDidMount() {\n    if (!this.state.access_token) {\n      this.props.history.push(\"/\");\n    } else {\n      const user = await getUserProfile(this.state.access_token);\n      if (user) {\n        this.setState({ user });\n      } else {\n        await this.logout();\n      }\n    }\n  }\n\n  /**\n   * 1. Removes the access token cookie\n   * 2. Sets the access token in the state to ''\n   * 3. Navigates to the homepage\n   */\n  async logout() {\n    await this.props.cookies.remove(\"access_token\");\n    this.setState({ access_token: \"\" }, () => {\n      this.props.history.push(\"/\");\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Header user={this.state.user} logout={this.logout.bind(this)}></Header>\n        <AllTracks access_token={this.state.access_token} />\n      </>\n    );\n  }\n}\n\nHome.propTypes = {\n  cookies: instanceOf(Cookies).isRequired,\n};\n\nexport default withCookies(Home);\n","import { clientID, scopes, redirect_uri } from \"../utilities/constants\";\n\nconst SPOTIFY_AUTH_URL =\n  \"https://accounts.spotify.com/authorize\" +\n  \"?response_type=token\" +\n  `&client_id=${clientID}` +\n  `&scope=${encodeURIComponent(scopes)}` +\n  `&redirect_uri=${encodeURIComponent(redirect_uri)}` +\n  \"&show_dialog=true\";\n\nexport const authWithSpotify = () => {\n  (window.location as any) = SPOTIFY_AUTH_URL;\n};\n","/* Constants used throughout the application */\n\nexport const clientID = \"bc800faa1cb3438da94f230ba04a1e1b\";\n\nexport const clientSecret = \"36d268ad41f24665a02dabe2d5ac8e5a\";\n\nexport const scopes = \"user-read-private user-read-email playlist-read-private\";\n\nexport const redirect_uri =\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\n    ? \"http://localhost:3000/\"\n    : \"https://jacobfisher18.github.io/playlist_analyzer/\";\n","import React, { Component } from \"react\";\nimport queryString from \"query-string\";\nimport { instanceOf } from \"prop-types\";\nimport { withCookies, Cookies } from \"react-cookie\";\nimport { authWithSpotify } from \"../../api/auth\";\nimport \"./Landing.css\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    const { location } = this.props;\n\n    const access_token = queryString.parse(location.hash).access_token || \"\";\n\n    if (access_token) {\n      this.props.cookies.set(\"access_token\", access_token);\n      this.props.history.push(\"/home\");\n    } else if (this.props.cookies.get(\"access_token\")) {\n      this.props.history.push(\"/home\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Landing\">\n        <h3 className=\"Landing_Title_Spotify\">Spotify</h3>\n        <h1 className=\"Landing_Title_Playlist_Analyzer\">PLAYLIST ANALYZER</h1>\n        <h5 className=\"Landing_Title_Web_App\">\n          A web app by <span className=\"Landing_Title_Name\">Jacob Fisher</span>\n        </h5>\n        <button\n          className=\"Landing_Button_Login\"\n          onClick={() => authWithSpotify()}\n        >\n          LOGIN\n        </button>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  cookies: instanceOf(Cookies).isRequired,\n};\n\nexport default withCookies(Landing);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { CookiesProvider } from \"react-cookie\";\nimport Home from \"./pages/Home/Home.jsx\";\nimport Landing from \"./pages/Landing/Landing.jsx\";\nimport \"./App.css\";\nimport { MantineProvider } from \"@mantine/core\";\n\nclass App extends Component {\n  render() {\n    return (\n      <CookiesProvider>\n        <MantineProvider\n          theme={{ colorScheme: \"dark\" }}\n          withGlobalStyles\n          withNormalizeCSS\n        >\n          <Router basename={process.env.PUBLIC_URL}>\n            <div>\n              <Route path=\"/\" exact component={Landing} />\n              <Route path=\"/home\" component={Home} />\n            </div>\n          </Router>\n        </MantineProvider>\n      </CookiesProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}